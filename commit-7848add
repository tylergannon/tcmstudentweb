commit 7848add66e88316ddd46302478acbf6c0c6c8ca1
Author: Tyler Gannon <tgannon@gmail.com>
Date:   Tue Jul 13 16:45:33 2010 -0700

    Finished with jQuery drop and code cleanup
    
    Removed rails-widgets
    Cleaned up search logic to improve queries
    Installed a bunch of indexes
    Added flash notices back to the major controllers.

diff --git a/app/controllers/formulas_controller.rb b/app/controllers/formulas_controller.rb
index d642d79..1d154b3 100644
--- a/app/controllers/formulas_controller.rb
+++ b/app/controllers/formulas_controller.rb
@@ -70,13 +70,13 @@ class FormulasController < ApplicationController
 
   def create
     @formula = Formula.new(params[:formula])
-    @formula.save
+    flash[:notice] = 'Formula was successfully created.' if @formula.save
     respond_with @formula
   end
 
   def update
     @formula = Formula.find(params[:id])
-    @formula.update_attributes(params[:formula])
+    flash[:notice] = 'Formula was successfully updated.' if @formula.update_attributes(params[:formula])
     respond_with @formula
   end
 
diff --git a/app/controllers/herbs_controller.rb b/app/controllers/herbs_controller.rb
index 1a02b77..0f85260 100644
--- a/app/controllers/herbs_controller.rb
+++ b/app/controllers/herbs_controller.rb
@@ -32,13 +32,13 @@ class HerbsController < ApplicationController
 
   def create
     @herb = Herb.new(params[:herb])
-    @herb.save
+    flash[:notice] = 'Successfully created new Herb.' if @herb.save
     respond_with @herb
   end
 
   def update
     @herb = Herb.find(params[:id])
-    @herb.update_attributes(params[:herb])
+    flash[:notice] = 'Herb was successfully updated.' if @herb.update_attributes(params[:herb])
     respond_with @herb
   end
 
diff --git a/app/controllers/patterns_controller.rb b/app/controllers/patterns_controller.rb
index b765a94..27bd45d 100644
--- a/app/controllers/patterns_controller.rb
+++ b/app/controllers/patterns_controller.rb
@@ -65,13 +65,16 @@ class PatternsController < ApplicationController
 
   def create
     @pattern = Pattern.new(params[:pattern])
-    @pattern.save
+    flash[:notice] = "Successfully created pattern." if @pattern.save
     respond_with @pattern
   end
 
   def update
     @pattern = Pattern.find(params[:id])
-    @pattern.update_attributes(params[:pattern])
+    if @pattern.update_attributes(params[:pattern])
+      flash[:notice] = "Successfully updated pattern of disharmony."
+    end
+
 
     respond_with @pattern do |wants|
       if params[:commit] == "Update"
diff --git a/app/helpers/application_helper.rb b/app/helpers/application_helper.rb
index 4cfe16d..60aca3a 100644
--- a/app/helpers/application_helper.rb
+++ b/app/helpers/application_helper.rb
@@ -1,5 +1,30 @@
 # Methods added to this helper will be available to all templates in the application.
 module ApplicationHelper
+  def show_box_for(obj, name="Show details")
+    check_active_record obj
+    link_to(name, options={}, html_options={"href"=>"#", "class"=>"show-element-link", "data-id"=>id_for_show_box(obj)})
+  end
+
+  def hide_box_for(obj, name="Hide details")
+    check_active_record obj
+    link_to(name, options={}, html_options={"href"=>"#", "class"=>"hide-element-link", "data-id"=>id_for_show_box(obj)})
+  end
+
+  def detail_box_for(obj, &block)
+    check_active_record obj
+    raise ArgumentError, 'Missing block in showhide.detail_box_for call' unless block_given?
+    concat content_tag(:div, capture(&block), :id=>id_for_show_box(obj), :class=>'hideable-hidden')
+    nil
+  end
+
+  def id_for_show_box(obj)
+    "detail_for_#{obj.class.name.underscore}#{obj.id}"
+  end
+
+  def check_active_record(obj)
+    raise "I can only handle ActiveRecords" unless obj.kind_of?(ActiveRecord::Base)
+  end
+
   def textile(str)
     Haml::Filters::TcmTextile.render(str)
   end
diff --git a/app/models/formula.rb b/app/models/formula.rb
index f477ce5..147ee31 100644
--- a/app/models/formula.rb
+++ b/app/models/formula.rb
@@ -27,7 +27,7 @@ class Formula < ActiveRecord::Base
 
   named_association :master_formula, :name, :class_name => "Formula"
 
-  search_on :canonical, :english, :pinyin
+  search_on :canonical, :pinyin
   scope :search_mod, order("char_length(canonical)")
 
   scope :next_from, lambda {|formula|
diff --git a/app/models/herb.rb b/app/models/herb.rb
index 4947cad..0e67cda 100644
--- a/app/models/herb.rb
+++ b/app/models/herb.rb
@@ -4,7 +4,7 @@ class Herb < ActiveRecord::Base
   acts_as_taggable
   acts_as_linkable :name => :pinyin, :title=>:latin
 
-  search_on :canonical, :latin, :pinyin, :common_name
+  search_on :canonical, :pinyin
   scope :search_mod, order("char_length(canonical)")
   scope :state_board, lambda{
     tagged_with("State Board")
@@ -31,6 +31,10 @@ class Herb < ActiveRecord::Base
   belongs_to :source_text_citation, :class_name => "Citation"
   belongs_to :herb_category
 
+  association_text :herb_therapeutic_functions,
+    :name=>:therapeutic_function_name, :commentary=>:commentary, :scope=>:with_tf_name
+
+
   accepts_nested_attributes_for :source_text_citation, :allow_destroy => true, :reject_if => proc {|a| a['textbook_title'].blank?}
 	accepts_nested_attributes_for :herb_comparisons, :allow_destroy => true, :reject_if => proc {|a| a['herb2_pinyin'].blank?}
 	accepts_nested_attributes_for :herb_therapeutic_functions, :allow_destroy => true, :reject_if => proc {|a| a['therapeutic_function_name'].blank?}
diff --git a/app/models/herb_therapeutic_function.rb b/app/models/herb_therapeutic_function.rb
index c857bc2..11fb3fe 100644
--- a/app/models/herb_therapeutic_function.rb
+++ b/app/models/herb_therapeutic_function.rb
@@ -3,4 +3,11 @@ class HerbTherapeuticFunction < ActiveRecord::Base
 	belongs_to :therapeutic_function
 	named_association :therapeutic_function, :name, :create=>true
 	acts_as_linkable :name=>:therapeutic_function_name
+	scope :with_tf_name, lambda{|name|
+	  tf = TherapeuticFunction.named(name)
+	  id = tf.id if tf
+	  joins(:therapeutic_function).where(
+	    :therapeutic_functions=>{:id=>id})
+  }
 end
+
diff --git a/app/models/symptom.rb b/app/models/symptom.rb
index f021eda..fe36dd7 100644
--- a/app/models/symptom.rb
+++ b/app/models/symptom.rb
@@ -3,10 +3,13 @@ class Symptom < ActiveRecord::Base
   has_many :patterns, :through => :pattern_symptoms
   acts_as_linkable :name=>:name
   search_on :name
+
   autocomplete_format do |symptom|
     {:value=>symptom.name}
   end
 
+  scope :search_mod, order('char_length(name)')
+
 
   def formulas
     patterns.map{|p| p.formulas.all}.uniq
diff --git a/app/views/acu_points/_point_combination.html.haml b/app/views/acu_points/_point_combination.html.haml
index bc60bfc..1378974 100644
--- a/app/views/acu_points/_point_combination.html.haml
+++ b/app/views/acu_points/_point_combination.html.haml
@@ -18,11 +18,11 @@
         %td{:colspan=>"2"}
           .field
             = f.label :source_text_citation
-            = render :partial => 'citations/edit_citation', :locals => {:f => f, :field => :source_text_citation}  
+            = render :partial => 'citations/edit_citation', :locals => {:f => f, :field => :source_text_citation}
   - else
-    = show_box_for f, :link_name => "Edit Details"
-    = detail_box_for f do
-      %b= hide_box_for f
+    = show_box_for f.object, "Edit Details"
+    = detail_box_for f.object do
+      %b= hide_box_for f.object
       %table
         %tr
           %td
@@ -38,6 +38,6 @@
           %td{:colspan=>"2"}
             .field
               = f.label :source_text_citation
-              = render :partial => 'citations/edit_citation', :locals => {:f => f, :field => :source_text_citation}  
+              = render :partial => 'citations/edit_citation', :locals => {:f => f, :field => :source_text_citation}
   = remove_child_link 'remove', f
 
diff --git a/app/views/acu_points/_point_prescription.html.haml b/app/views/acu_points/_point_prescription.html.haml
index 34e0126..8151718 100644
--- a/app/views/acu_points/_point_prescription.html.haml
+++ b/app/views/acu_points/_point_prescription.html.haml
@@ -13,11 +13,11 @@
       = f.text_area :pp_acu_points_text, :rows => 12, :cols => 100
     .field
       = f.label :citation
-      = render :partial => 'citations/edit_citation', :locals => {:f => f, :field => :citation}  
+      = render :partial => 'citations/edit_citation', :locals => {:f => f, :field => :citation}
   - else
-    = show_box_for f, :link_name => "Edit Details"
-    = detail_box_for f do
-      %b= hide_box_for f
+    = show_box_for f.object, "Edit Details"
+    = detail_box_for f.object do
+      %b= hide_box_for f.object
       .field
         = f.label :commentary, "Commentary"
         %br
diff --git a/app/views/acu_points/show.html.haml b/app/views/acu_points/show.html.haml
index 35aaff2..f65aca8 100644
--- a/app/views/acu_points/show.html.haml
+++ b/app/views/acu_points/show.html.haml
@@ -34,7 +34,7 @@
         != link_to "#{pattern.name} #{show_citation(pp.citation, :short)}", pattern
       - else
         = "#{pp.commentary} #{show_citation(pp.citation, :short)}"
-      = show_box_for ppap, :link_name => "Show"
+      = show_box_for ppap, "Show"
       - unless ppap.commentary.empty?
         :tcmtextile
           #{ppap.commentary}
diff --git a/app/views/formulas/_form.html.haml b/app/views/formulas/_form.html.haml
index f0a8b0c..e5448c5 100644
--- a/app/views/formulas/_form.html.haml
+++ b/app/views/formulas/_form.html.haml
@@ -27,7 +27,7 @@
   %h2
     Ingredients
   != add_child_link 'Add an Herb', 'formula_herb', f
-  %ul{:class=>'formula_herb_children', :id=>'formula_herb_children'}
+  %ul{:class=>'formula_herb_chiltdren', :id=>'formula_herb_children'}
     = f.fields_for :formula_herbs do |formula_herb_form|
       = render :partial => 'formula_herb', :locals => { :f => formula_herb_form }
 
diff --git a/app/views/formulas/_formula_herb.html.haml b/app/views/formulas/_formula_herb.html.haml
index 4539f94..f8c33ee 100644
--- a/app/views/formulas/_formula_herb.html.haml
+++ b/app/views/formulas/_formula_herb.html.haml
@@ -4,7 +4,7 @@
       %td
         Preparation / Pinyin:
         %br/
-        != "#{f.text_field :preparation_name, :size => 3} #{tfwac f, :herb_pinyin, 'herbs', :size=>15"
+        != "#{f.text_field :preparation_name, :size => 3} #{tfwac f, :herb_pinyin, 'herbs', :size=>15}"
       %td Role #{f.collection_select :formula_role_id, FormulaRole.all, :id, :pinyin}
       %td
         Dose #{f.text_field :dose, :size => "10"}#{remove_child_link 'x', f}
diff --git a/app/views/herbs/_dui_yao.html.haml b/app/views/herbs/_dui_yao.html.haml
index 8740a41..34e6d7a 100644
--- a/app/views/herbs/_dui_yao.html.haml
+++ b/app/views/herbs/_dui_yao.html.haml
@@ -11,3 +11,4 @@
         = f.text_area :commentary, :rows => "3", :cols=> 45
         %br/
         #{remove_child_link 'remove', f}
+
diff --git a/app/views/herbs/_form.html.haml b/app/views/herbs/_form.html.haml
index c071d1a..17bab9a 100644
--- a/app/views/herbs/_form.html.haml
+++ b/app/views/herbs/_form.html.haml
@@ -1,7 +1,4 @@
 = f.error_messages
-= f.label :category_id
-%br
-!= tfwac f, :herb_category_name,  'herb_categories'
 
 %h2 Source
 %table
@@ -29,33 +26,22 @@
 %p
   = f.label :contraindications
   = f.text_area :contraindications
-%hr
+%hr/
 
 
-#herb_channel_children
-  - f.fields_for :herb_channels do |herb_channel_form|
-    = render :partial => 'herb_channel', :locals => { :f => herb_channel_form }
-%p
-  != add_child_link 'Add a HerbChannel', 'herb_channel', f
-#herb_flavor_children
-  - f.fields_for :herb_flavors do |herb_flavor_form|
-    = render :partial => 'herb_flavor', :locals => { :f => herb_flavor_form }
-%p
-  != add_child_link 'Add a HerbFlavor', 'herb_flavor', f
-%p
-  != add_child_link 'Add a HerbTherapeuticFunction', 'herb_therapeutic_function', f
-#herb_therapeutic_function_children
-  - f.fields_for :herb_therapeutic_functions do |herb_therapeutic_function_form|
-    = render :partial => 'herb_therapeutic_function', :locals => { :f => herb_therapeutic_function_form }
-%p
+%h2 Therapeutic Functions
+= text_area_with_auto_complete f, :herb_therapeutic_functions_text, "therapeutic_functions", :rows => 2, :cols => 50
+
+.child
   != add_child_link 'Add a Comparison', 'herb_comparison', f
-#herb_comparison_children
-  - f.fields_for :herb_comparisons do |herb_comparison_form|
-    = render :partial => 'herb_comparison', :locals => { :f => herb_comparison_form }
+  .herb_comparison_children
+    - f.fields_for :herb_comparisons do |herb_comparison_form|
+      = render :partial => 'herb_comparison', :locals => { :f => herb_comparison_form }
 
-%p
+%hr/
+.child
   != add_child_link 'Add a Dui Yao', 'dui_yao', f
-#dui_yao_children
-  - f.fields_for :dui_yaos do |dui_yao_form|
-    = render :partial => 'dui_yao', :locals => { :f => dui_yao_form }
+  .dui_yao_children
+    = f.fields_for :dui_yaos do |dui_yao_form|
+      = render :partial => 'dui_yao', :locals => { :f => dui_yao_form }
 
diff --git a/app/views/herbs/_herb_channel.html.haml b/app/views/herbs/_herb_channel.html.haml
new file mode 100644
index 0000000..4b4dd3b
--- /dev/null
+++ b/app/views/herbs/_herb_channel.html.haml
@@ -0,0 +1,5 @@
+.child
+  Channel:
+  != f.text_field_with_auto_complete :channel_name, {}, { :url => channels_path(:format => :js), :method => :get, :skip_style => true, :with => "'search='+element.value" }
+  = f.hidden_field :_destroy, :class => 'delete'
+  = remove_child_link 'remove', f
diff --git a/app/views/herbs/show.html.haml b/app/views/herbs/show.html.haml
index 4c44fcf..f188ef4 100644
--- a/app/views/herbs/show.html.haml
+++ b/app/views/herbs/show.html.haml
@@ -17,7 +17,7 @@
       = @herb.temperature
       %br/
       = @herb.channel_list
-    
+
 %br/
 - unless @herb.citation.nil?
   Reference: #{render :partial => 'citations/show', :locals => {:citation => @herb.citation}}
@@ -31,7 +31,7 @@
     %li
       %b= h htf.therapeutic_function_name
       - unless htf.commentary.empty?
-        = show_box_for htf, :link_name => "Details"
+        = show_box_for htf, "Details"
         = detail_box_for htf do
           :tcmtextile
             #{htf.commentary}
@@ -75,7 +75,7 @@
     %br/
     :tcmtextile
       #{dui_yao.commentary}
-  
+
 - if @herb.formula_herbs.size > 0
   %h3 Formulas:
   %ul
diff --git a/coolio.rb b/coolio.rb
deleted file mode 100644
index 600711b..0000000
--- a/coolio.rb
+++ /dev/null
@@ -1,9 +0,0 @@
- filename = 'doc/Herbs.csv'
- file = File.new(filename, 'r')
- 
- file.each_line("\n") do |row|
-   columns = row.split(",")
-   columns.map!{|v| v.gsub(/\"/, "").strip}
-   
-   puts columns[0]
- end
diff --git a/db/migrate/20100713231255_add_some_indexes.rb b/db/migrate/20100713231255_add_some_indexes.rb
new file mode 100644
index 0000000..8a85e3e
--- /dev/null
+++ b/db/migrate/20100713231255_add_some_indexes.rb
@@ -0,0 +1,60 @@
+class AddSomeIndexes < ActiveRecord::Migration
+  def self.up
+    add_index :acu_point_categories, :acu_point_id
+    add_index :acu_point_categories, :category_id
+    add_index :acu_point_infos, :acu_point_id
+    add_index :acu_point_infos, :citation_id
+    add_index :acu_point_symptoms, :symptom_id
+    add_index :acu_point_symptoms, :acu_point_info_id
+    add_index :acu_point_therapeutic_functions, :therapeutic_function_id
+    add_index :acu_point_therapeutic_functions, :acu_point_info_id
+    add_index :acu_points_point_combinations, :acu_point_id
+    add_index :acu_points_point_combinations, :point_combination_id
+    add_index :acu_points, [:channel_id, :ordinal]
+    add_index :articles, :title
+    add_index :categories, :name
+    add_index :citations, :textbook_id
+    add_index :dui_yaos, :herb1_id
+    add_index :dui_yaos, :herb2_id
+    add_index :dui_yaos_formulas, :formula_id
+    add_index :dui_yaos_formulas, :dui_yao_id
+    add_index :formula_comparisons, :formula1_id
+    add_index :formula_comparisons, :formula2_id
+    add_index :formula_herbs, :formula_id
+    add_index :formula_herbs, :herb_id
+    add_index :formula_therapeutic_functions, :formula_id
+    add_index :formula_therapeutic_functions, :therapeutic_function_id
+    add_index :formulas, :pinyin
+    add_index :formulas, :canonical
+    add_index :formulas, :citation_id
+    add_index :formulas_patterns, :formula_id
+    add_index :formulas_patterns, :pattern_id
+    add_index :herb_comparisons, :herb1_id
+    add_index :herb_comparisons, :herb2_id
+    add_index :herbs, :pinyin
+    add_index :herbs, :canonical
+    add_index :pattern_symptoms, :pattern_id
+    add_index :pattern_symptoms, :symptom_id
+    add_index :patterns, :name
+    add_index :patterns, :citation_id
+    add_index :patterns_therapeutic_functions, :pattern_id
+    add_index :patterns_therapeutic_functions, :therapeutic_function_id
+    add_index :point_combinations, :citation_id
+    add_index :point_combinations_symptoms, :point_combination_id
+    add_index :point_combinations_symptoms, :symptom_id
+    add_index :point_prescription_acu_points, :point_prescription_id
+    add_index :point_prescription_acu_points, :acu_point_id
+    add_index :point_prescriptions, :pattern_id
+    add_index :point_prescriptions, :citation_id
+    add_index :symptoms, :name
+    add_index :taggings, [:taggable_id, :taggable_type, :context]
+    add_index :tags, :name
+    add_index :textbooks, :title
+    add_index :therapeutic_functions, :name
+
+  end
+
+  def self.down
+  end
+end
+
diff --git a/db/schema.rb b/db/schema.rb
index c464614..c1e28bc 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -9,7 +9,7 @@
 #
 # It's strongly recommended to check this file into your version control system.
 
-ActiveRecord::Schema.define(:version => 20100712052330) do
+ActiveRecord::Schema.define(:version => 20100713231255) do
 
   create_table "acu_point_categories", :force => true do |t|
     t.integer  "acu_point_id"
@@ -20,6 +20,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "acu_point_categories", ["acu_point_id"], :name => "index_acu_point_categories_on_acu_point_id"
+  add_index "acu_point_categories", ["category_id"], :name => "index_acu_point_categories_on_category_id"
+
   create_table "acu_point_infos", :force => true do |t|
     t.integer  "acu_point_id"
     t.string   "english"
@@ -30,6 +33,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.string   "location"
   end
 
+  add_index "acu_point_infos", ["acu_point_id"], :name => "index_acu_point_infos_on_acu_point_id"
+  add_index "acu_point_infos", ["citation_id"], :name => "index_acu_point_infos_on_citation_id"
+
   create_table "acu_point_symptoms", :force => true do |t|
     t.integer  "symptom_id"
     t.datetime "created_at"
@@ -41,6 +47,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "position"
   end
 
+  add_index "acu_point_symptoms", ["acu_point_info_id"], :name => "index_acu_point_symptoms_on_acu_point_info_id"
+  add_index "acu_point_symptoms", ["symptom_id"], :name => "index_acu_point_symptoms_on_symptom_id"
+
   create_table "acu_point_therapeutic_functions", :force => true do |t|
     t.integer  "therapeutic_function_id"
     t.text     "commentary"
@@ -50,6 +59,8 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "position"
   end
 
+  add_index "acu_point_therapeutic_functions", ["acu_point_info_id"], :name => "index_acu_point_therapeutic_functions_on_acu_point_info_id"
+
   create_table "acu_points", :force => true do |t|
     t.integer  "channel_id"
     t.integer  "ordinal"
@@ -62,11 +73,16 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.string   "canonical"
   end
 
+  add_index "acu_points", ["channel_id", "ordinal"], :name => "index_acu_points_on_channel_id_and_ordinal"
+
   create_table "acu_points_point_combinations", :id => false, :force => true do |t|
     t.integer "point_combination_id"
     t.integer "acu_point_id"
   end
 
+  add_index "acu_points_point_combinations", ["acu_point_id"], :name => "index_acu_points_point_combinations_on_acu_point_id"
+  add_index "acu_points_point_combinations", ["point_combination_id"], :name => "index_acu_points_point_combinations_on_point_combination_id"
+
   create_table "articles", :force => true do |t|
     t.string   "title"
     t.text     "body"
@@ -74,6 +90,8 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "articles", ["title"], :name => "index_articles_on_title"
+
   create_table "authors", :force => true do |t|
     t.string   "name"
     t.datetime "created_at"
@@ -86,6 +104,8 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "categories", ["name"], :name => "index_categories_on_name"
+
   create_table "channels", :force => true do |t|
     t.string   "name"
     t.datetime "created_at"
@@ -101,6 +121,8 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "citations", ["textbook_id"], :name => "index_citations_on_textbook_id"
+
   create_table "contraindications", :force => true do |t|
     t.string   "name"
     t.datetime "created_at"
@@ -115,6 +137,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "herb2_id"
   end
 
+  add_index "dui_yaos", ["herb1_id"], :name => "index_dui_yaos_on_herb1_id"
+  add_index "dui_yaos", ["herb2_id"], :name => "index_dui_yaos_on_herb2_id"
+
   create_table "dui_yaos_formulas", :id => false, :force => true do |t|
     t.integer  "formula_id"
     t.integer  "dui_yao_id"
@@ -122,6 +147,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "dui_yaos_formulas", ["dui_yao_id"], :name => "index_dui_yaos_formulas_on_dui_yao_id"
+  add_index "dui_yaos_formulas", ["formula_id"], :name => "index_dui_yaos_formulas_on_formula_id"
+
   create_table "formula_comparisons", :force => true do |t|
     t.integer  "formula1_id"
     t.integer  "formula2_id"
@@ -133,6 +161,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "citation_id"
   end
 
+  add_index "formula_comparisons", ["formula1_id"], :name => "index_formula_comparisons_on_formula1_id"
+  add_index "formula_comparisons", ["formula2_id"], :name => "index_formula_comparisons_on_formula2_id"
+
   create_table "formula_contraindications", :force => true do |t|
     t.integer  "formula_id"
     t.integer  "contraindication_id"
@@ -152,6 +183,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "preparation_id"
   end
 
+  add_index "formula_herbs", ["formula_id"], :name => "index_formula_herbs_on_formula_id"
+  add_index "formula_herbs", ["herb_id"], :name => "index_formula_herbs_on_herb_id"
+
   create_table "formula_roles", :force => true do |t|
     t.string   "pinyin"
     t.string   "english"
@@ -167,6 +201,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.text     "commentary"
   end
 
+  add_index "formula_therapeutic_functions", ["formula_id"], :name => "index_formula_therapeutic_functions_on_formula_id"
+  add_index "formula_therapeutic_functions", ["therapeutic_function_id"], :name => "index_formula_therapeutic_functions_on_therapeutic_function_id"
+
   create_table "formulas", :force => true do |t|
     t.string   "pinyin"
     t.string   "english"
@@ -185,6 +222,10 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "master_formula_id"
   end
 
+  add_index "formulas", ["canonical"], :name => "index_formulas_on_canonical"
+  add_index "formulas", ["citation_id"], :name => "index_formulas_on_citation_id"
+  add_index "formulas", ["pinyin"], :name => "index_formulas_on_pinyin"
+
   create_table "formulas_patterns", :id => false, :force => true do |t|
     t.integer  "formula_id"
     t.integer  "pattern_id"
@@ -192,6 +233,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "formulas_patterns", ["formula_id"], :name => "index_formulas_patterns_on_formula_id"
+  add_index "formulas_patterns", ["pattern_id"], :name => "index_formulas_patterns_on_pattern_id"
+
   create_table "herb_categories", :force => true do |t|
     t.string   "name"
     t.datetime "created_at"
@@ -213,6 +257,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "herb_comparisons", ["herb1_id"], :name => "index_herb_comparisons_on_herb1_id"
+  add_index "herb_comparisons", ["herb2_id"], :name => "index_herb_comparisons_on_herb2_id"
+
   create_table "herb_flavors", :force => true do |t|
     t.integer  "herb_id"
     t.integer  "flavor_id"
@@ -258,6 +305,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.string   "temperature"
   end
 
+  add_index "herbs", ["canonical"], :name => "index_herbs_on_canonical"
+  add_index "herbs", ["pinyin"], :name => "index_herbs_on_pinyin"
+
   create_table "pattern_symptoms", :force => true do |t|
     t.integer  "symptom_id"
     t.integer  "pattern_id"
@@ -269,6 +319,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.integer  "position"
   end
 
+  add_index "pattern_symptoms", ["pattern_id"], :name => "index_pattern_symptoms_on_pattern_id"
+  add_index "pattern_symptoms", ["symptom_id"], :name => "index_pattern_symptoms_on_symptom_id"
+
   create_table "patterns", :force => true do |t|
     t.string   "name"
     t.text     "commentary"
@@ -279,6 +332,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.string   "pulse"
   end
 
+  add_index "patterns", ["citation_id"], :name => "index_patterns_on_citation_id"
+  add_index "patterns", ["name"], :name => "index_patterns_on_name"
+
   create_table "patterns_therapeutic_functions", :id => false, :force => true do |t|
     t.integer  "pattern_id"
     t.integer  "therapeutic_function_id"
@@ -286,6 +342,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "patterns_therapeutic_functions", ["pattern_id"], :name => "index_patterns_therapeutic_functions_on_pattern_id"
+  add_index "patterns_therapeutic_functions", ["therapeutic_function_id"], :name => "index_patterns_therapeutic_functions_on_therapeutic_function_id"
+
   create_table "point_combinations", :force => true do |t|
     t.string   "name"
     t.integer  "citation_id"
@@ -294,11 +353,16 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "point_combinations", ["citation_id"], :name => "index_point_combinations_on_citation_id"
+
   create_table "point_combinations_symptoms", :id => false, :force => true do |t|
     t.integer "point_combination_id"
     t.integer "symptom_id"
   end
 
+  add_index "point_combinations_symptoms", ["point_combination_id"], :name => "index_point_combinations_symptoms_on_point_combination_id"
+  add_index "point_combinations_symptoms", ["symptom_id"], :name => "index_point_combinations_symptoms_on_symptom_id"
+
   create_table "point_prescription_acu_points", :force => true do |t|
     t.integer  "point_prescription_id"
     t.integer  "acu_point_id"
@@ -308,6 +372,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.string   "reason"
   end
 
+  add_index "point_prescription_acu_points", ["acu_point_id"], :name => "index_point_prescription_acu_points_on_acu_point_id"
+  add_index "point_prescription_acu_points", ["point_prescription_id"], :name => "index_point_prescription_acu_points_on_point_prescription_id"
+
   create_table "point_prescriptions", :force => true do |t|
     t.integer  "pattern_id"
     t.string   "name"
@@ -317,6 +384,9 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "point_prescriptions", ["citation_id"], :name => "index_point_prescriptions_on_citation_id"
+  add_index "point_prescriptions", ["pattern_id"], :name => "index_point_prescriptions_on_pattern_id"
+
   create_table "roles", :force => true do |t|
     t.string   "name"
     t.datetime "created_at"
@@ -329,6 +399,8 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.datetime "updated_at"
   end
 
+  add_index "symptoms", ["name"], :name => "index_symptoms_on_name"
+
   create_table "taggings", :force => true do |t|
     t.integer  "tag_id"
     t.integer  "taggable_id"
@@ -340,11 +412,14 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
   end
 
   add_index "taggings", ["tag_id"], :name => "index_taggings_on_tag_id"
+  add_index "taggings", ["taggable_id", "taggable_type", "context"], :name => "index_taggings_on_taggable_id_and_taggable_type_and_context"
 
   create_table "tags", :force => true do |t|
     t.string "name"
   end
 
+  add_index "tags", ["name"], :name => "index_tags_on_name"
+
   create_table "textbooks", :force => true do |t|
     t.string   "title"
     t.integer  "author_id"
@@ -354,12 +429,16 @@ ActiveRecord::Schema.define(:version => 20100712052330) do
     t.string   "abbrev"
   end
 
+  add_index "textbooks", ["title"], :name => "index_textbooks_on_title"
+
   create_table "therapeutic_functions", :force => true do |t|
     t.string   "name"
     t.datetime "created_at"
     t.datetime "updated_at"
   end
 
+  add_index "therapeutic_functions", ["name"], :name => "index_therapeutic_functions_on_name"
+
   create_table "users", :force => true do |t|
     t.string   "login",                                  :null => false
     t.string   "email",                                  :null => false
diff --git a/public/images/widgets/tooltip_arrow.gif b/public/images/widgets/tooltip_arrow.gif
deleted file mode 100644
index 70a94cb..0000000
Binary files a/public/images/widgets/tooltip_arrow.gif and /dev/null differ
diff --git a/public/images/widgets/tooltip_image.gif b/public/images/widgets/tooltip_image.gif
deleted file mode 100644
index 697a5c2..0000000
Binary files a/public/images/widgets/tooltip_image.gif and /dev/null differ
diff --git a/public/javascripts/nested_attributes.js b/public/javascripts/nested_attributes.js
index 0329541..9d36c78 100644
--- a/public/javascripts/nested_attributes.js
+++ b/public/javascripts/nested_attributes.js
@@ -7,6 +7,16 @@ function setUpDocument($jq) {
     });
   });
 
+  $jq.find("a.show-element-link").click(function(){
+    $('#'+$(this).attr('data-id')).show();
+    return false;
+  });
+
+  $jq.find("a.hide-element-link").click(function(){
+    $('#'+$(this).attr('data-id')).hide();
+    return false;
+  });
+
   $jq.find("textarea[data-auto-complete|=ta]").each( function(idx, el){
     setTextAreaAutoComplete($(el));
   });
diff --git a/public/javascripts/widgets/tooltip.js b/public/javascripts/widgets/tooltip.js
deleted file mode 100644
index dfac54a..0000000
--- a/public/javascripts/widgets/tooltip.js
+++ /dev/null
@@ -1,9 +0,0 @@
-// tooltip widget
-function toggleTooltip(event, element) { 
-  var __x = Event.pointerX(event);
-  var __y = Event.pointerY(event);
-  //alert(__x+","+__y);
-  element.style.top = __y + 5;  
-  element.style.left = __x - 40;
-  element.toggle();
-}
\ No newline at end of file
diff --git a/public/stylesheets/nested_attributes.css b/public/stylesheets/nested_attributes.css
index 73b748b..636cb45 100644
--- a/public/stylesheets/nested_attributes.css
+++ b/public/stylesheets/nested_attributes.css
@@ -1,3 +1,7 @@
 
 .form-template {
   display: none; }
+.hideable-hidden {
+  display: none;
+}
+
diff --git a/rock_the_plastic.rb b/rock_the_plastic.rb
deleted file mode 100644
index c13f024..0000000
--- a/rock_the_plastic.rb
+++ /dev/null
@@ -1,32 +0,0 @@
-?class RockThePlastic5
-  def self.go
-    Pattern.order(:id).each do |p|
-      if p.primary_pattern_list.size == 0
-        puts p.name
-        puts p.pattern_symptoms.map{|t| t.symptom_name}.join(", ")
-        if p.tag_list.size == 0
-          puts "New tags?\n>"
-          a=gets.strip
-          
-          while a["?"] == "?"
-            ActsAsTaggableOn::Tag.where("name like '%#{a[0..a.size-2]}%'").each{|t| puts t.name} unless a.empty?
-            puts
-            a=gets.strip
-          end
-          a.split(",").map{|t| t.strip}.each{|t| p.tag_list << t} unless a.empty?
-        end
-        puts "Primary patterns=#{p.primary_pattern_list}.\n Primary Pattern?\n>"
-        a=gets.strip
-        while a["?"] == "?"
-          ActsAsTaggableOn::Tag.where("name like '%#{a[0..a.size-2]}%'").each{|t| puts t.name} unless a.empty?
-          puts
-          a=gets.strip
-        end
-        a.split(",").map{|t| t.strip}.each{|t| p.primary_pattern_list << t} unless a.empty?
-        p.save
-        puts "Saved\n"
-      end
-    end
-  end
-end
-
diff --git a/vendor/plugins/rails-widgets/.gitignore b/vendor/plugins/rails-widgets/.gitignore
deleted file mode 100644
index 854c137..0000000
--- a/vendor/plugins/rails-widgets/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-nbproject/
-
diff --git a/vendor/plugins/rails-widgets/CHANGELOG b/vendor/plugins/rails-widgets/CHANGELOG
deleted file mode 100644
index 88a3031..0000000
--- a/vendor/plugins/rails-widgets/CHANGELOG
+++ /dev/null
@@ -1,4 +0,0 @@
-nov 01, 2007
-  ADD: Added disableable support to Tabnav, thanks to Nick Plante <nap@zerosum.org>
-  ADD: Added partial rendering for Tooltips
-  ADD: started tracking changes in this CHANGELOG
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/Documentation.txt b/vendor/plugins/rails-widgets/Documentation.txt
deleted file mode 100644
index 0df55a7..0000000
--- a/vendor/plugins/rails-widgets/Documentation.txt
+++ /dev/null
@@ -1,30 +0,0 @@
-- - Tableizer - -
-	<% tableize :customers, @customers,
-							:header => 'Listing Customers',
-							:generate_css => 'true' do |customer| %>
-							
-							<h3><%= customer.name %></h3>
-							<p>
-								Code: <%= customer.code %>
-								Place order: <%= customer.order %>
-								<%= link_to 'show', .... %>
-								<%= link_to 'Edit', .... %>
-								<%= link_to 'Destroy', .... %>
-							</p>
-	<% end %>	
-							
-- - ShowHide - -
-
-usage in view, array usage
-
-<% for user in @users %>
-	<%=h user.login %>
-		<%= show_detail_for user %>
-			
-			<% detail_for user do %>
-			 details ....
-			 <%=h user.email %>
-			 more details....
-			 <%= hide_detail_for user %>
-		 <% end %>
-<% end %>
diff --git a/vendor/plugins/rails-widgets/LICENSE b/vendor/plugins/rails-widgets/LICENSE
deleted file mode 100644
index 57cc6b4..0000000
--- a/vendor/plugins/rails-widgets/LICENSE
+++ /dev/null
@@ -1,21 +0,0 @@
-MIT License
-
-Copyright (c) 2009 Paolo Dona and contributors
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
diff --git a/vendor/plugins/rails-widgets/README b/vendor/plugins/rails-widgets/README
deleted file mode 100644
index dcdd68a..0000000
--- a/vendor/plugins/rails-widgets/README
+++ /dev/null
@@ -1,19 +0,0 @@
-Rails Widgets
-=======
-
-Rails Widgets is a collection of UI Widgets for RubyOnRails (in form of ActionView helpers).
-You can add tabbed navigations, progressbars, rounded boxes etc in a snap.
-All the widgets generate and inline their own CSS. Once your page is up and running you can extract and customize them as you wish.
-
-Source code:
-  git://github.com/paolodona/rails-widgets.git
-
-Documentation: 
-  http://github.com/paolodona/rails-widgets/wikis
-
-Discussion Groups:
-  http://groups.google.com/group/railswidgets
-  http://groups.google.com/group/rails-widgets-dev
-
-Issue Tracking:
-  http://rails-widgets.lighthouseapp.com
diff --git a/vendor/plugins/rails-widgets/Rakefile b/vendor/plugins/rails-widgets/Rakefile
deleted file mode 100644
index 9e42a57..0000000
--- a/vendor/plugins/rails-widgets/Rakefile
+++ /dev/null
@@ -1,22 +0,0 @@
-require 'rake'
-require 'rake/testtask'
-require 'rake/rdoctask'
-
-desc 'Default: run unit tests.'
-task :default => :test
-
-desc 'Test the widgets plugin.'
-Rake::TestTask.new(:test) do |t|
-  t.libs << 'lib'
-  t.pattern = 'test/**/*_test.rb'
-  t.verbose = true
-end
-
-desc 'Generate documentation for the widgets plugin.'
-Rake::RDocTask.new(:rdoc) do |rdoc|
-  rdoc.rdoc_dir = 'rdoc'
-  rdoc.title    = 'Widgets'
-  rdoc.options << '--line-numbers' << '--inline-source'
-  rdoc.rdoc_files.include('README')
-  rdoc.rdoc_files.include('lib/**/*.rb')
-end
diff --git a/vendor/plugins/rails-widgets/generators/navigation/USAGE b/vendor/plugins/rails-widgets/generators/navigation/USAGE
deleted file mode 100644
index 99ea462..0000000
--- a/vendor/plugins/rails-widgets/generators/navigation/USAGE
+++ /dev/null
@@ -1,10 +0,0 @@
-The navigation generator creates a sample navigation partial.
-      
-invoke with:  ./script/generate navigation <name>
-         es:  ./script/generate navigation main
-
-Usage:
-    Customize your generated partial (es: views/widgets/_main_navigation.html.erb)
-    then insert in your .html.erb pages one of this snippet:
-
-    <%= navigation :main %>
diff --git a/vendor/plugins/rails-widgets/generators/navigation/navigation_generator.rb b/vendor/plugins/rails-widgets/generators/navigation/navigation_generator.rb
deleted file mode 100644
index 9a41afd..0000000
--- a/vendor/plugins/rails-widgets/generators/navigation/navigation_generator.rb
+++ /dev/null
@@ -1,28 +0,0 @@
-class NavigationGenerator < Rails::Generator::Base
-  attr_accessor :name
-
-  def initialize(*runtime_args)
-    super(*runtime_args)
-    if args[0].nil? 
-      puts banner
-    else
-      @name = args[0].underscore
-    end
-  end
-  
-  def manifest
-    record do |m|
-      if @name 
-        m.directory File.join('app/views/widgets')
-        m.template 'navigation.html.erb', File.join('app/views/widgets', "_#{@name}_navigation.html.erb")
-      end
-    end
-  end
-  
-  protected 
-  
-  def banner
-    IO.read File.expand_path(File.join(File.dirname(__FILE__), 'USAGE')) 
-  end
-  
-end
diff --git a/vendor/plugins/rails-widgets/generators/navigation/templates/navigation.html.erb b/vendor/plugins/rails-widgets/generators/navigation/templates/navigation.html.erb
deleted file mode 100644
index c1754ce..0000000
--- a/vendor/plugins/rails-widgets/generators/navigation/templates/navigation.html.erb
+++ /dev/null
@@ -1,36 +0,0 @@
-<%%  
-# this partial renders a navigation bar, you can call it in your views with:
-#   <%% navigation :<%=name%> % > 
-#
-# you can pass render_navigation a few options:
-#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
-#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'}) 
-#  
-render_navigation :<%=name%>, :generate_css => true do 
-    add_item do |i|
-      i.named 'welcome to the rails-widgets'
-      i.disable!
-    end
-    
-    add_item do |i|
-      # i.html = {:id => 'logout_link'}
-      i.named 'github' 
-      i.links_to "http://github.com/paolodona/rails-widgets"
-    end
-
-    add_item do |i|
-      i.named 'wiki' 
-      i.titled 'contribute to the wiki!'
-      i.links_to "http://github.com/paolodona/rails-widgets/wiki"
-    end
-    
-    # you can pass add_item a block to just like the tabnav!
-    #  
-    # add_item do |i|
-    #   i.html = {:id => 'logout_link'}
-    #   i.named 'logout', 
-    #   i.links_to :action => 'logout'
-    # end
-    #
-end 
-%>
diff --git a/vendor/plugins/rails-widgets/generators/tabnav/USAGE b/vendor/plugins/rails-widgets/generators/tabnav/USAGE
deleted file mode 100644
index 700ebf1..0000000
--- a/vendor/plugins/rails-widgets/generators/tabnav/USAGE
+++ /dev/null
@@ -1,14 +0,0 @@
-The tabnav generator creates a sample Tabnav partial.
-      
-invoke with:  ./script/generate tabnav <name>
-         es:  ./script/generate tabnav main
-
-Usage:
-    Customize your generated partial (es: views/widgets/_main_tabnav.html.erb)
-    then insert in your .html.erb pages one of these snippets:
-
-    <% tabnav :main do %>
-       your html here
-    <% end %>
- 
-    <%= tabnav :main %>
diff --git a/vendor/plugins/rails-widgets/generators/tabnav/tabnav_generator.rb b/vendor/plugins/rails-widgets/generators/tabnav/tabnav_generator.rb
deleted file mode 100644
index 6c886c8..0000000
--- a/vendor/plugins/rails-widgets/generators/tabnav/tabnav_generator.rb
+++ /dev/null
@@ -1,28 +0,0 @@
-class TabnavGenerator < Rails::Generator::Base
-  attr_accessor :name
-
-  def initialize(*runtime_args)
-    super(*runtime_args)
-    if args[0].nil? 
-      puts banner
-    else
-      @name = args[0].underscore
-    end
-  end
-  
-  def manifest
-    record do |m|
-      if @name 
-        m.directory File.join('app/views/widgets')
-        m.template 'tabnav.html.erb', File.join('app/views/widgets', "_#{@name}_tabnav.html.erb")
-      end
-    end
-  end
-  
-  protected 
-  
-  def banner
-    IO.read File.expand_path(File.join(File.dirname(__FILE__), 'USAGE')) 
-  end
-  
-end
diff --git a/vendor/plugins/rails-widgets/generators/tabnav/templates/tabnav.html.erb b/vendor/plugins/rails-widgets/generators/tabnav/templates/tabnav.html.erb
deleted file mode 100644
index a90e0fd..0000000
--- a/vendor/plugins/rails-widgets/generators/tabnav/templates/tabnav.html.erb
+++ /dev/null
@@ -1,65 +0,0 @@
-<%='<'+'%'%>  
-# this partial renders a tabnav, you can call it in your views with:
-#   <%='<'+'%='%> tabnav :<%=name%> % > (just the tabnav) 
-# or, if you want a boxed tabnav:
-#   <%% tabnav :<%=name%> do % >
-#     your html here
-#   <%% end % >
-# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
-#
-# you can pass render_tabnav a few options:
-#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
-#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'}) 
-#     
-render_tabnav :<%=name%>, 
-              :generate_css => true do 
-    
-  # this generates a tab for every controller in your app
-  # you'll probably want to delete this and
-  # add tabs one by one as shown below
-  controller_names.each do |name|
-    add_tab do |t|
-      t.named name.camelize
-      t.titled "Go to #{name.camelize}"
-      t.links_to :controller => name
-    end
-  end 
-         
-  #add_tab do |t|
-  #  t.named 'Home'
-  #  t.titled 'Home Page'
-  #  t.links_to :controller => 'welcome'
-  #end 
-  #  
-  # you can use restful routes with:
-  #
-  #add_tab do |t|
-  #  t.named 'Users'
-  #  t.links_to hash_for_users_path
-  #end
-  #
-  #add_tab do |t|
-  #  t.named 'Customers'
-  #  t.links_to :controller => 'customers'
-  #end
-  #  
-  # # A tab can be initialized with a Hash like this:
-  # 
-  # add_tab :name => 'welcome', :link => {:controller=>'welcome'}
-  #
-  # # You can have a dynamic name or link 
-  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
-  #  
-  # add_tab do |t|
-  #   t.named "#{current_user} details"
-  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
-  # end
-  #
-  # # You can have an image inside 
-  #
-  # add_tab do |t|
-  #   t.named image_tag('test')
-  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
-  # end
-end 
-<%='%'+'>'%>
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/images/tooltip_arrow.gif b/vendor/plugins/rails-widgets/images/tooltip_arrow.gif
deleted file mode 100644
index 70a94cb..0000000
Binary files a/vendor/plugins/rails-widgets/images/tooltip_arrow.gif and /dev/null differ
diff --git a/vendor/plugins/rails-widgets/images/tooltip_image.gif b/vendor/plugins/rails-widgets/images/tooltip_image.gif
deleted file mode 100644
index 697a5c2..0000000
Binary files a/vendor/plugins/rails-widgets/images/tooltip_image.gif and /dev/null differ
diff --git a/vendor/plugins/rails-widgets/init.rb b/vendor/plugins/rails-widgets/init.rb
deleted file mode 100644
index 815e341..0000000
--- a/vendor/plugins/rails-widgets/init.rb
+++ /dev/null
@@ -1,2 +0,0 @@
-# Include hook code here
-require 'widgets'
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/install.rb b/vendor/plugins/rails-widgets/install.rb
deleted file mode 100644
index 22b107c..0000000
--- a/vendor/plugins/rails-widgets/install.rb
+++ /dev/null
@@ -1,27 +0,0 @@
-def copy(file_name, from_dir, to_dir)
-  FileUtils.mkdir to_dir unless File.exist?(File.expand_path(to_dir))   
-  from = File.expand_path(File.join(from_dir,file_name))
-  to = File.expand_path(File.join(to_dir, file_name))
-  FileUtils.cp from, to, :verbose => true unless File.exist?(to)
-end
-
-def copy_image(file_name)
-  plugin_images = File.join(File.dirname(__FILE__), 'images')
-  app_images = File.join(RAILS_ROOT, 'public/images/widgets')
-  copy file_name, plugin_images, app_images 
-end
-
-def copy_javascript(file_name)
-  plugin_javascripts = File.join(File.dirname(__FILE__), 'javascripts')
-  app_javascripts = File.join(RAILS_ROOT, 'public/javascripts/widgets')
-  copy file_name, plugin_javascripts, app_javascripts 
-end
-
-# copy static assets
-begin 
-  copy_image 'tooltip_arrow.gif'
-  copy_image 'tooltip_image.gif'
-  copy_javascript 'tooltip.js'
-rescue Exception => e
-  puts "There are problems copying widgets assets to you app: #{e.message}"
-end
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/javascripts/tooltip.js b/vendor/plugins/rails-widgets/javascripts/tooltip.js
deleted file mode 100644
index dfac54a..0000000
--- a/vendor/plugins/rails-widgets/javascripts/tooltip.js
+++ /dev/null
@@ -1,9 +0,0 @@
-// tooltip widget
-function toggleTooltip(event, element) { 
-  var __x = Event.pointerX(event);
-  var __y = Event.pointerY(event);
-  //alert(__x+","+__y);
-  element.style.top = __y + 5;  
-  element.style.left = __x - 40;
-  element.toggle();
-}
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/lib/widgets.rb b/vendor/plugins/rails-widgets/lib/widgets.rb
deleted file mode 100644
index 23d263c..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets.rb
+++ /dev/null
@@ -1,47 +0,0 @@
-# Widgets
-require 'widgets/core'
-require 'widgets/css_template'
-require 'widgets/highlightable'
-require 'widgets/disableable'
-
-##### Navigation #####
-require 'widgets/navigation_item'
-require 'widgets/navigation'
-require 'widgets/navigation_helper'
-ActionController::Base.helper Widgets::NavigationHelper
-
-##### Tabnav #####
-require 'widgets/tab'
-require 'widgets/tabnav'
-require 'widgets/tabnav_helper'
-ActionController::Base.helper Widgets::TabnavHelper
-
-##### Table #####
-require 'widgets/table_helper'
-ActionController::Base.helper Widgets::TableHelper
-
-##### Code #####
-# not enabled by default because it depends on the Syntax gem
-# require 'widgets/code_helper'
-# ActionController::Base.helper Widgets::CodeHelper
-
-##### ShowHide #####
-require 'widgets/showhide_helper'
-ActionController::Base.helper Widgets::ShowhideHelper
-
-##### Tooltip #####
-require 'widgets/tooltip_helper'
-ActionController::Base.helper Widgets::TooltipHelper
-
-##### Progressbar #####
-require 'widgets/progressbar_helper'
-ActionController::Base.helper Widgets::ProgressbarHelper
-
-##### Spiffy Corners #####
-require 'widgets/spiffy_corners/spiffy_corners_helper'
-ActionController::Base.helper Widgets::SpiffyCorners::SpiffyCornersHelper
-
-##### UtilsHelper #####
-require 'widgets/utils_helper'
-ActionController::Base.helper Widgets::UtilsHelper
-
diff --git a/vendor/plugins/rails-widgets/lib/widgets/code.css.erb b/vendor/plugins/rails-widgets/lib/widgets/code.css.erb
deleted file mode 100644
index ac76e9d..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/code.css.erb
+++ /dev/null
@@ -1,32 +0,0 @@
-<style>
-pre {
-    background-color: #f1f1f3;
-    color: #112;
-    padding: 10px;
-    font-size: 1.1em;
-    overflow: auto;
-    margin: 4px 0px;
-    width: 95%;
-}
-    
-/* Syntax highlighting */
-pre .normal {}
-pre .comment { color: #005; font-style: italic; }
-pre .keyword { color: #A00; font-weight: bold; }
-pre .method { color: #077; }
-pre .class { color: #074; }
-pre .module { color: #050; }
-pre .punct { color: #447; font-weight: bold; }
-pre .symbol { color: #099; }
-pre .string { color: #944; background: #FFE; }
-pre .char { color: #F07; }
-pre .ident { color: #004; }
-pre .constant { color: #07F; }
-pre .regex { color: #B66; background: #FEF; }
-pre .number { color: #F99; }
-pre .attribute { color: #5bb; }
-pre .global { color: #7FB; }
-pre .expr { color: #227; }
-pre .escape { color: #277; }
-
-</style>
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/lib/widgets/code_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/code_helper.rb
deleted file mode 100644
index 4d1e2b3..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/code_helper.rb
+++ /dev/null
@@ -1,17 +0,0 @@
-module Widgets
-  module CodeHelper
-    # es: <%= code 'models/post.rb' %>
-    def code file_path, opts = {}
-      html = ''
-      if (opts.has_key?[:generate_css] && opts[:generate_css] != false) || opts[:generate_css] == true
-        css_template = ERB.new IO.read(File.expand_path(File.dirname(__FILE__) + '/code.css.erb'))
-        html << css_template.result(binding)
-      end
-      
-      code = File.read(File.expand_path(File.join(RAILS_ROOT, "app/#{file_path}")))
-      convertor = ::Syntax::Convertors::HTML.for_syntax "ruby"
-      html << convertor.convert(code)
-      html
-    end   
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/core.rb b/vendor/plugins/rails-widgets/lib/widgets/core.rb
deleted file mode 100644
index 965c131..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/core.rb
+++ /dev/null
@@ -1,20 +0,0 @@
-module ActionView
-  module Helpers
-    module AssetTagHelper
-      
-      # We redefine javascript_include_tag in order to auto-magically include
-      # the widgets javascripts. If you hame more than one javascript_include_tag
-      # call, the widgets javascripts gets included only once.
-      def javascript_include_tag_with_widgets(*sources)
-        unless @__widgets_has_already_included_its_js
-          options = sources.last.is_a?(Hash) ? sources.pop : {} # remove options
-          sources << 'widgets/tooltip'
-          sources << options # add previously removed option
-          @__widgets_has_already_included_its_js = true
-        end 
-        javascript_include_tag_without_widgets(*sources)
-      end
-      alias_method_chain :javascript_include_tag, :widgets 
-    end
-  end
-end
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/lib/widgets/css_template.rb b/vendor/plugins/rails-widgets/lib/widgets/css_template.rb
deleted file mode 100644
index cb58f18..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/css_template.rb
+++ /dev/null
@@ -1,28 +0,0 @@
-module Widgets
-  # Utility module for widgets that need to create a default CSS
-  # you have to include it inside a Widget to add css_generation capability
-  module CssTemplate
-    
-    def render_css(name)
-      @_widgets_css_templates ||= {}
-      return @_widgets_css_templates[name] if @_widgets_css_templates[name] # return the cached copy if possible
-      # if not cached read and evaluate the template
-      css_template_filename = "#{name}.css.erb" 
-      css_template = ERB.new IO.read(File.join(File.dirname(__FILE__), css_template_filename))
-      @_widgets_css_templates[name] = css_template.result(binding)
-    end 
-    
-    # WD-rpw 02-22-2009 changed name to not conflict with ruby/gems/1.8/gems/actionpack-1.13.3/lib/action_view/base.rb's render_template method
-    def rw_render_template(name, _binding = nil)
-      _template_filename = "#{name}.html.erb" 
-      _template = ERB.new IO.read(File.join(File.dirname(__FILE__), _template_filename))
-      _template.result(binding)
-    end
-
-    # should the helper generate a css for this widget?
-    def generate_css?
-      @generate_css ? true : false
-    end
-    
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/disableable.rb b/vendor/plugins/rails-widgets/lib/widgets/disableable.rb
deleted file mode 100644
index 39ab7c4..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/disableable.rb
+++ /dev/null
@@ -1,34 +0,0 @@
-module Widgets
-  module Disableable
-    def self.included(base)
-      # base.extend(ClassMethods)
-      base.class_eval do
-        include InstanceMethods
-        attr_writer :disabled_condition
-      end
-    end
-
-    module InstanceMethods 
-      def disabled_condition
-        @disabled_condition ||= proc { false }
-        @disabled_condition
-      end
-      
-      # a disable rule should always be a Proc object
-      def disabled_if rule
-        raise "you must pass a proc to disabled_if" unless rule.kind_of?(Proc)
-        self.disabled_condition = rule if rule.kind_of?(Proc)
-      end
-      
-      # force the tab as disabled
-      def disable!
-        self.disabled_condition = proc {true}
-      end
-   
-      # Proc evaluates to true/false
-      def disabled?
-        self.disabled_condition.call
-      end
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/highlightable.rb b/vendor/plugins/rails-widgets/lib/widgets/highlightable.rb
deleted file mode 100644
index 5cb4dc3..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/highlightable.rb
+++ /dev/null
@@ -1,80 +0,0 @@
-module Widgets
-  module Highlightable
-    def self.included(base)
-      # base.extend(ClassMethods)
-      base.class_eval do
-        include InstanceMethods
-        attr_writer :highlights
-      end
-    end
-
-    module InstanceMethods 
-      def highlights
-        @highlights ||= []
-        @highlights
-      end
-      
-      # a rule can be:
-      #  * a parameter hash eg: {:controller => 'main', :action => 'welcome'}
-      #  * a string containing an URL eg: 'http://blog.seesaw.it'
-      def highlights_on rule
-        highlights << rule
-      end
-      
-      # force the tab as highlighted
-      def highlight!
-        highlights_on proc { true }
-      end
-     
-      # takes in input a Hash (usually params)
-      # or a string/Proc that evaluates to true/false
-      # it does ignore some params like 'only_path' etc..
-      # we have to do this in orderr to support restful routes
-      def highlighted? options={}
-        option = clean_unwanted_keys(options)
-        #puts "### '#{name}'.highlighted? #{options.inspect}"
-        result = false
-       
-        highlights.each do |highlight| # for every highlight(proc or hash)
-          highlighted = true
-          if highlight.kind_of? String # do not highlight @TODO: should we evaluate the request URI for this?
-            highlighted &= false 
-          elsif highlight.kind_of? Proc # evaluate the proc
-            h = highlight.call
-            if (h.is_a?(TrueClass) || h.is_a?(FalseClass))
-              highlighted &= h
-            else
-              raise 'proc highlighting rules must evaluate to TrueClass or FalseClass'
-            end
-          elsif highlight.kind_of? Hash # evaluate the hash
-            h = clean_unwanted_keys(highlight)
-            h.each_key do |key|   # for each key
-              # remove first slash from <tt>:controller</tt> key otherwise highlighted? could fail with urls such as {:controller => "/base"</tt>
-              h_key = h[key].to_param.dup
-              h_key.gsub!(/^\//,"") if key == :controller          
-              highlighted &= h_key==options[key].to_s
-            end
-          else # highlighting rule not supported
-            raise 'highlighting rules should be String, Proc or Hash' 
-          end
-          result |= highlighted
-        end
-        return result
-      end
-      
-      private  
-      
-      # removes unwanted keys from a Hash 
-      # and returns a new hash
-      def clean_unwanted_keys(hash)
-        ignored_keys = [:only_path, :use_route]
-        hash.dup.delete_if{|key,value| ignored_keys.include?(key)}
-      end
-
-      def check_hash(param, param_name)
-        raise "param '#{param_name}' should be a Hash but is #{param.inspect}" unless param.kind_of?(Hash)
-        param
-      end
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/navigation.css.erb b/vendor/plugins/rails-widgets/lib/widgets/navigation.css.erb
deleted file mode 100644
index a6ad010..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/navigation.css.erb
+++ /dev/null
@@ -1,39 +0,0 @@
-<style>
-.<%=html[:class]%> {
-  margin: 0px 5px 0px auto;
-  float:right;
-}
-
-.<%=html[:class]%> ul {
-  padding: 0;
-  margin: 0;
-  text-align: right;
-}
-
-.<%=html[:class]%> li {
-  display:inline;
-  padding: 0;
-  margin: 0;
-}
-
-.<%=html[:class]%> li span.disabled {
-  color: #888888;
-}
-
-.<%=html[:class]%> a, .<%=html[:class]%> a:visited, .<%=html[:class]%> a:hover {
-  border: none;
-  padding:0;
-  margin:0;
-  font-weight: normal;
-  color: #000000;
-}
-
-.<%=html[:class]%> a:hover {
-  font-weight: normal;
-  color: #CB4415;
-}
-
-.<%=html[:class]%> a.active {
-  font-weight: bold;
-}
-</style>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/navigation.rb b/vendor/plugins/rails-widgets/lib/widgets/navigation.rb
deleted file mode 100644
index eab5240..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/navigation.rb
+++ /dev/null
@@ -1,22 +0,0 @@
-module Widgets 
-  class Navigation
-    attr_accessor :name, :items, :html, :separator
-    include CssTemplate
-    
-    def initialize(name, opts={})
-      @name = name
-      @items = []
-      @generate_css = opts[:generate_css] || false
-      @html = opts[:html] || {} # setup default html options
-      @html[:id] ||= "#{@name}_navigation"
-      @html[:class] ||= @html[:id]
-      @separator = opts[:separator] ||= '&nbsp;|'
-    end
-    
-    def add_item opts={}
-      @items ||= []
-      @items << NavigationItem.new(opts)
-    end
-  
-  end
-end
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/lib/widgets/navigation_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/navigation_helper.rb
deleted file mode 100644
index 517ffb5..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/navigation_helper.rb
+++ /dev/null
@@ -1,58 +0,0 @@
-module Widgets
-  module NavigationHelper
-
-    def navigation name, opts={}
-      partial_template = opts[:partial] || "widgets/#{name}_navigation"
-      html = capture { render :partial => partial_template }
-      return html
-    end
-
-    def render_navigation(name=:main, opts={}, &proc)
-      raise ArgumentError, "Missing name parameter in render_navigation call" unless name
-      raise ArgumentError, "Missing block in render_navigation call" unless block_given?
-      @_navigation = Navigation.new(name, opts)
-      instance_eval(&proc)
-      concat @_navigation.render_css('navigation') if @_navigation.generate_css?
-      concat tag('div',@_navigation.html ,true)
-      render_navigation_items
-      concat '</div>'
-      nil
-    end
-
-    def add_item opts = {}, &block
-      raise 'Cannot call add_item outside of a render_navigation block' unless @_navigation
-      @_navigation.items << NavigationItem.new(opts,&block)
-      nil
-    end
-
-    private
-
-    def render_navigation_items
-      return if @_navigation.items.empty?
-
-      concat "<ul>\n"
-      @_navigation.items.each_with_index do |item,index|
-        if item.disabled?
-          item.html[:class] = 'disabled'
-        elsif item.highlighted?(params)
-          item.html[:class] = 'active'
-        end
-
-        concat '<li>'
-        if item.disabled?
-          concat content_tag('span', item.name, item.html)
-        else
-          if !item.function.blank?
-            concat link_to_function(item.name, item.function, item.html)
-          else
-            concat link_to(item.name, item.link, item.html)
-          end
-        end
-        concat @_navigation.separator unless index == @_navigation.items.size - 1
-        concat "</li>\n"
-      end
-      concat '</ul>'
-    end
-  end
-end
-
diff --git a/vendor/plugins/rails-widgets/lib/widgets/navigation_item.rb b/vendor/plugins/rails-widgets/lib/widgets/navigation_item.rb
deleted file mode 100644
index 64e273c..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/navigation_item.rb
+++ /dev/null
@@ -1,34 +0,0 @@
-module Widgets
-  class NavigationItem
-    include Highlightable
-    include Disableable
-    
-    attr_accessor :name, :link, :html, :function
-    
-    def initialize(opts={})
-      @name = opts[:name] 
-      @link = opts[:link] || {}
-      @html = opts[:html] || {} 
-      @function = opts[:function] || {}
-      @html[:title] = opts[:title] 
-      @html[:target] = opts[:target]      
-     
-      yield(self) if block_given?
-      
-      self.highlights << @link if link? # it does highlight on itself
-      raise ArgumentError, 'you must provide a name' unless @name
-    end
-    
-    # more idiomatic ways to set tab properties
-    def links_to(l); @link = l; end
-    def function_to(f); @function = f; end
-    def named(n); @name = n; end
-    def titled(t); @html[:title] = t; end 
-    def new_window(n); html[:target] = n ? '_blank' : nil; end    
-       
-    def link?
-      @link && !@link.empty?
-    end
-         
-  end
-end
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/lib/widgets/progressbar.css.erb b/vendor/plugins/rails-widgets/lib/widgets/progressbar.css.erb
deleted file mode 100644
index b3e5390..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/progressbar.css.erb
+++ /dev/null
@@ -1,26 +0,0 @@
-<style>
-div.progressbar {
- border: 1px solid #ccc; 
- width: 100px; 
- margin: 2px 5px 2px 0; 
- padding: 1px; 
- float: left; 
- background: white;
-}
-
-div.progressbar > div {
- height: 12px;
- float: left;
-}
-
-div.progressbar > div.progressbar_color_0 { background-color: #ACE97C; }
-div.progressbar > div.progressbar_color_1 { background-color: #E35E5D; }
-div.progressbar > div.progressbar_color_2 { background-color: #302B26; }
-div.progressbar > div.progressbar_color_3 { background-color: #93D3D4; }
-div.progressbar > div.progressbar_color_4 { background-color: #FFA300; }
-div.progressbar > div.progressbar_color_5 { background-color: #8E709E; }
-div.progressbar > div.progressbar_color_6 { background-color: #FFD8C7; }
-div.progressbar > div.progressbar_color_7 { background-color: #0D4006; }
-div.progressbar > div.progressbar_color_8 { background-color: gray; }
-div.progressbar > div.progressbar_color_9 { background-color: #EDE9DD; }
-</style>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/progressbar_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/progressbar_helper.rb
deleted file mode 100644
index 99ecc57..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/progressbar_helper.rb
+++ /dev/null
@@ -1,39 +0,0 @@
-module Widgets
-  module ProgressbarHelper  
-    include CssTemplate
-    
-    # show a progressbar
-    #
-    # eg: <%= progressbar 35, :generate_css => true %>
-    # or  <%= progressbar [35,78,15] %>
-    #
-    # options
-    # ===
-    #   :generate_css defaults to false 
-    #   :adjust       defaults to false
-    def progressbar values, options={}
-      raise ArgumentError, "Missing value(s) parameter in progressbar call" unless values
-      raise ArgumentError, "The value parameter has to be a Numeric o Array" unless values.kind_of?(Array) or values.kind_of?(Numeric)
-      if values.kind_of? Numeric # single value
-        total = 100 
-        values = [values]
-      else # Array of values
-        total = values.sum
-      end 
-
-      html = ""
-      html << render_css('progressbar') if options[:generate_css] == true
-      html << '<div class="progressbar">'          
-      values.dup.each_with_index do |value, index|
-        if total == 0
-          percentage = 0
-        else
-          percentage = options[:adjust] ? (value * 100 / total) : value
-        end 
-        css_class = "progressbar_color_#{index.modulo(10)}"
-        html << "<div style='width: #{percentage}%;' class='#{css_class}'></div>"
-      end 
-      html << "</div>" 
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/showhide.css.erb b/vendor/plugins/rails-widgets/lib/widgets/showhide.css.erb
deleted file mode 100644
index 5745f5a..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/showhide.css.erb
+++ /dev/null
@@ -1,8 +0,0 @@
-<style>
-  .<%=@css_class%> {
-    background: #FFFABF;
-    border: solid 1px #cccccc;
-    padding: 10px;
-    margin-bottom: 5px;
-  }
-</style>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/showhide_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/showhide_helper.rb
deleted file mode 100644
index bce40ac..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/showhide_helper.rb
+++ /dev/null
@@ -1,90 +0,0 @@
-module Widgets
-  module ShowhideHelper
-    include CssTemplate
-
-    def show_box_for record, opts={}
-      name = opts[:name] || 'details'
-      link_name = opts[:link_name] || 'show details'
-      detail_box_id = opts[:detail_box_id] || dom_detail_id(record,name)
-
-      html = opts[:html] || {} # setup default html options
-      html[:id] ||= dom_show_id(record,name)
-      html[:class] ||= "#{name}_show_link"
-
-      link_to_function link_name, nil, html do |page|
-        page[detail_box_id].show
-        page[html[:id]].hide
-      end
-    end
-
-    def hide_box_for record, opts={}
-      name = opts[:name] || 'details'
-      link_name = opts[:link_name] || 'hide details'
-      detail_box_id = opts[:detail_box_id] || dom_detail_id(record,name)
-      show_link_id = opts[:show_link_id] || dom_show_id(record,name)
-
-      html = opts[:html] || {} # setup default html options
-      html[:id] ||= dom_hide_id(record,name)
-      html[:class] ||= "#{name}_hide_link"
-
-      link_to_function link_name, nil, html do |page|
-        page[detail_box_id].hide
-        page[show_link_id].show
-      end
-    end
-
-    def detail_box_for record, opts={}, &block
-      raise ArgumentError, 'Missing block in showhide.detail_box_for call' unless block_given?
-      name = opts[:name] || 'details'
-      @generate_css = opts[:generate_css] || false
-
-      html = opts[:html] || {} # setup default html options
-      html[:id] ||= dom_detail_id(record,name)
-      html[:class] ||= "#{name}_for_#{normalize_class_name(record)}"
-      html[:style] = 'display:none;'
-      @css_class = html[:class]
-      concat(render_css('showhide')) if generate_css?
-      # Taken from ActionView::Helpers::RecordTagHelper
-      concat content_tag(:div, capture(&block), html)
-      nil
-    end
-
-    private
-
-    def dom_detail_id record, name
-      normalize_dom_id(record, name.to_s)
-    end
-
-    def dom_show_id record, name
-      normalize_dom_id(record, "show_#{name}")
-    end
-
-    def dom_hide_id record, name
-      normalize_dom_id(record, "hide_#{name}")
-    end
-
-    def normalize_dom_id object, prefix
-      if object.kind_of?(ActiveRecord::Base)
-        dom_id(object, "#{prefix}_for#{object.id ? '' : '_new'}")
-      else
-        [ prefix, 'for', normalize_class_name(object) ].compact * '_'
-      end
-    end
-
-    def normalize_class_name object
-      if object.kind_of?(ActiveRecord::Base)
-        ActionController::RecordIdentifier.singular_class_name(object)
-      else
-        object.to_s
-      end
-    end
-
-    # content_tag_for creates an HTML element with id and class parameters
-    # that relate to the specified Active Record object.
-    #
-    # Taken from ActionView::Helpers::RecordTagHelper
-    def content_box_for(tag_name, *args, &block)
-      concat content_tag(tag_name, capture(&block), args)
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy5.html.erb b/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy5.html.erb
deleted file mode 100644
index 05a2dc7..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy5.html.erb
+++ /dev/null
@@ -1,15 +0,0 @@
-<div>
-  <b class="spiffy">
-  <b class="spiffy1"><b></b></b>
-  <b class="spiffy2"><b></b></b>
-  <b class="spiffy3"></b>
-  <b class="spiffy4"></b>
-  <b class="spiffy5"></b></b>
-  <div class="spiffyfg"><%= @_spiffy_corners_content %></div>
-  <b class="spiffy">
-  <b class="spiffy5"></b>
-  <b class="spiffy4"></b>
-  <b class="spiffy3"></b>
-  <b class="spiffy2"><b></b></b>
-  <b class="spiffy1"><b></b></b></b>
-</div>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy_corners.css.erb b/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy_corners.css.erb
deleted file mode 100644
index f4ab240..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy_corners.css.erb
+++ /dev/null
@@ -1,39 +0,0 @@
-<style>
-.spiffy{display:block}
-.spiffy *{
-  display:block;
-  height:1px;
-  overflow:hidden;
-  font-size:.01em;
-  background:#C3D9FF}
-.spiffy1{
-  margin-left:3px;
-  margin-right:3px;
-  padding-left:1px;
-  padding-right:1px;
-  border-left:1px solid #e5eeff;
-  border-right:1px solid #e5eeff;
-  background:#d2e2ff}
-.spiffy2{
-  margin-left:1px;
-  margin-right:1px;
-  padding-right:1px;
-  padding-left:1px;
-  border-left:1px solid #f9fbff;
-  border-right:1px solid #f9fbff;
-  background:#cee0ff}
-.spiffy3{
-  margin-left:1px;
-  margin-right:1px;
-  border-left:1px solid #cee0ff;
-  border-right:1px solid #cee0ff;}
-.spiffy4{
-  border-left:1px solid #e5eeff;
-  border-right:1px solid #e5eeff}
-.spiffy5{
-  border-left:1px solid #d2e2ff;
-  border-right:1px solid #d2e2ff}
-.spiffyfg{
-  padding: 0 5px; 
-  background:#C3D9FF}
-</style>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy_corners_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy_corners_helper.rb
deleted file mode 100644
index c6c9f49..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/spiffy_corners/spiffy_corners_helper.rb
+++ /dev/null
@@ -1,20 +0,0 @@
-module Widgets
-  module SpiffyCorners
-    module SpiffyCornersHelper
-
-      protected
-
-      include CssTemplate
-      def spiffy_corners opts={}, &block
-        raise "you must pass spiffy_corners a block!" unless block_given?
-        html = []
-        html << render_css('spiffy_corners/spiffy_corners') if opts[:generate_css] == true
-        @_spiffy_corners_content = capture(&block) 
-        html << rw_render_template('spiffy_corners/spiffy5', binding)
-       
-        concat html.join
-        return nil
-      end
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/tab.rb b/vendor/plugins/rails-widgets/lib/widgets/tab.rb
deleted file mode 100644
index 7a101dc..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/tab.rb
+++ /dev/null
@@ -1,44 +0,0 @@
-module Widgets
-  class Tab
-    include Highlightable
-    include Disableable
-    attr_accessor :link, :remote_link, :name, :html
-    
-    def initialize(opts={})
-      @name = opts[:name] 
-      @link = opts[:link] || {}
-      @remote_link = opts[:remote_link] || nil
-      
-      # wrap highlights into an array if only one hash has been passed
-      opts[:highlights] = [opts[:highlights]] if opts[:highlights].kind_of?(Hash)
-      self.highlights = opts[:highlights] || []
-      self.disabled_if opts[:disabled_if] || proc { false }
-      @html = opts[:html] || {} 
-      @html[:title] = opts[:title] 
-     
-      yield(self) if block_given?
-      
-      self.highlights << @link if link? # it does highlight on itself
-      raise ArgumentError, 'you must provide a name' unless @name
-    end
-    
-    # title is a shortcut to html[:title]
-    def title; @html[:title]; end
-    def title=(new_title); @html[:title]=new_title; end
-    
-    # more idiomatic ways to set tab properties
-    def links_to(l); @link = l; end
-    def links_to_remote(rl); 
-      @remote_link = rl; 
-      #remote links MUST have a dom_id
-      #if not given I'll generate a random one
-      @html[:id] ||= "tab_#{rand(99999)}"
-    end
-    def named(n); @name = n; end
-    def titled(t); @html[:title] = t; end
-    
-    def link?
-      @link && !@link.empty?
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/table.css.erb b/vendor/plugins/rails-widgets/lib/widgets/table.css.erb
deleted file mode 100644
index cb15578..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/table.css.erb
+++ /dev/null
@@ -1,26 +0,0 @@
-<style>
-.<%=@name%>_table {
-  margin: 10px;
-  border-collapse: collapse;
-}
-
-.<%=@name%>_table td {
-  text-align: left;
-  vertical-align: top;
-  padding: 5px;
-  border: 1px solid #CCCCCC;
-}
-
-.<%=@name%>_table th {
-  text-align: left;
-  vertical-align: top;
-  padding: 10px;
-  border: 1px solid #CCCCCC;
-  background-color: #DDDDDD;
-  font-weight: bold;
-}
-
-.<%=@name%>_table td.blank {
-   border: none;
-}
-</style>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/table_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/table_helper.rb
deleted file mode 100644
index fd24eb3..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/table_helper.rb
+++ /dev/null
@@ -1,204 +0,0 @@
-
-module Widgets
-  
-  module TableHelper
-    include CssTemplate
-    
-    # Returns an HTML table with +:collection+ disposed in rows. Add
-    # HTML attributes by passing an attributes hash to +html+.
-    # The content of each item is rendered using the given block.
-    #
-    # +:collection+ array of items
-    # +:cols+ number of columns (default 3)
-    # +:html+ table html attributes (+:class+, +:id+)
-    # +:name+ name of table (dafault +:main+)
-    #
-    #   <% tableize @users, :name => 'credential', :html => {:class => 'people'}, :cols => 2 do |user| -%>
-    #     login: <%= user.name %>
-    #   <% end -%>
-    #
-    #    # => <table id="credential_table" class="people"><tbody><tr>
-    #           <td>login: scooby</td><td>&nbsp;</td>
-    #         </tr></tbody></table>
-    #
-    def tableize(collection = nil, opts = {}, &block)
-      table = Tableizer.new(collection, opts, self, &block)
-      table.render
-    end
-    
-    class Tableizer
-      
-      def initialize(collection, opts, template, &block)
-        parse_args(collection, opts, template, &block)
-        
-        raise ArgumentError, 'Missing collection parameter in tableize call' unless @collection
-        raise ArgumentError, 'Missing block in tableize call' unless block_given?
-        raise ArgumentError, 'Tableize columns must be two or more' unless columns >= 2
-        
-        @buffer = ''
-      end
-      
-      def render
-        generate_css
-        generate_html
-        flush_to_template
-        return nil # avoid duplication if called with <%= %>
-      end
-      
-      protected
-      
-      def parse_args(collection, opts, template, &block)
-        @collection = collection
-        @collection ||= opts[:collection]
-        
-        @opts = opts
-        
-        name = opts[:name] || :main
-        @html = opts[:html] || {}
-        @html[:id] ||= name.to_s.underscore << '_table'
-        @html[:class] ||= @html[:id]
-        
-        @template = template
-        @block = block
-      end
-      
-      def generate_css
-        @buffer << render_css('table') if generate_css?
-      end
-      
-      def generate_html
-        opening_table_tags
-        table_rows
-        closing_table_tags
-      end
-      
-      def flush_to_template
-        concat(@buffer)
-      end
-      
-      def opening_table_tags
-        @buffer << tag('table', {:id => table_id, :class => table_class}, true) 
-        @buffer << tag('tbody', nil, true)
-      end
-      
-      def closing_table_tags
-        @buffer << '</tbody>' << '</table>'
-      end
-      
-      def table_rows
-        @index = 0
-        @size = @collection.size
-        
-        opening_tr_tag
-        header_tag
-        fill_table_cells
-        closing_tr_tag
-      end
-      
-      def opening_tr_tag
-        @buffer << tag('tr', nil, true)
-      end
-      
-      def closing_tr_tag
-        @buffer << '</tr>'
-      end
-
-      def header_tag
-        if header
-          @buffer << content_tag('th', header)
-          allow_for_extra_item
-        end
-      end
-      
-      def allow_for_extra_item
-        @index += 1
-        @size += 1
-      end
-      
-      def fill_table_cells
-        @collection.each do |item|
-          @index += 1
-          generate_cell(item)
-          wrap_to_new_row_if_required
-        end
-        pad_last_row
-      end
-      
-      def empty_cell
-        content_tag('td', '&nbsp;', :class => 'blank')
-      end
-      
-      def generate_cell(item)
-        @buffer << content_tag('td', capture(item, &@block))
-      end
-      
-      def wrap_to_new_row_if_required
-        if wrap_to_new_row?
-          closing_tr_tag
-          opening_tr_tag
-          skip_header_column
-        end
-      end
-      
-      def wrap_to_new_row?
-        end_of_current_line? and !final_element?
-      end
-      
-      def end_of_current_line?
-        @index.remainder(columns) == 0
-      end
-      
-      def final_element?
-        @index == @size
-      end
-      
-      def skip_header_column
-        if skip_header_column?
-          @buffer << empty_cell 
-          allow_for_extra_item
-        end
-      end
-      
-      def skip_header_column?
-        @opts[:skip_header_column] == true
-      end
-      
-      def pad_last_row
-        remainder = @size.remainder(columns)
-        cells_to_pad = columns - remainder
-        
-        unless remainder == 0
-          cells_to_pad.times do
-            @buffer << empty_cell
-          end 
-        end
-      end
-
-      def generate_css?
-        @opts[:generate_css] || false
-      end
-      
-      def columns
-        @opts[:cols] || 3
-      end
-      
-      def header
-        @opts[:header]
-      end
-      
-      def table_id
-        @html[:id]
-      end
-      
-      def table_class
-        @html[:class]
-      end
-      
-      def method_missing(*args, &block)
-        @template.send(*args, &block)
-      end
-    end
-    
-  end
-  
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/tabnav.css.erb b/vendor/plugins/rails-widgets/lib/widgets/tabnav.css.erb
deleted file mode 100644
index 2a7bc15..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/tabnav.css.erb
+++ /dev/null
@@ -1,60 +0,0 @@
-<style>
-.<%=@name%>_tabnav {
-	color: #000;
-	border-bottom: 2px solid black;
-	margin: 13px 0px 0px 0px;
-	padding: 0px;
-	z-index: 1;
-	padding-left: 10px }
-
-.<%=@name%>_tabnav ul {
-	margin: 0px;
-	padding: 0px;
-}
-
-.<%=@name%>_tabnav li {
-	display: inline;
-	overflow: hidden;
-	list-style-type: none; }
-
-.<%=@name%>_tabnav li span.disabled {
-        color: #888888;
-        background: #FAFAFA;
-        border: 2px solid #DDDDDD;
-        border-bottom: none;
-        padding: 2px 5px 0px 5px;
-        margin: 0;
-        text-decoration: none;}
-
-.<%=@name%>_tabnav a, <%=@name%>_tabnav a.active {
-	color: #000000;
-	background: #EEEEEE;
-	font-weight: bold;
-	border: 2px solid black;
-	padding: 2px 5px 0px 5px;
-	margin: 0;
-	text-decoration: none; }
-
-.<%=@name%>_tabnav a.active {
-	background: #FFFFFF;
-	border-bottom: 3px solid #FFFFFF; }
-
-.<%=@name%>_tabnav a:hover {
-	color: #FFFFFF;
-	background: #CCCCCC; }
-
-.<%=@name%>_tabnav a:visited {
-	color: #000000; }
-
-.<%=@name%>_tabnav a.active:hover {
-	background: #FFFFFF;
-	color: #000000; }
-
-.<%=@name%>_tabnav_content {
-	background: #FFFFFF;
-	padding: 20px;
-	border: 2px solid black;
-	border-top: none;
-	z-index: 2;
-}
-</style>
diff --git a/vendor/plugins/rails-widgets/lib/widgets/tabnav.rb b/vendor/plugins/rails-widgets/lib/widgets/tabnav.rb
deleted file mode 100644
index fb2f48c..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/tabnav.rb
+++ /dev/null
@@ -1,26 +0,0 @@
-module Widgets 
-  class Tabnav 
-    include CssTemplate
-    attr_accessor :tabs, :html, :name
-        
-    def initialize(name, opts={})
-      @name = name || :main
-      @tabs = []
-      @generate_css = opts[:generate_css] || false
-      @html = opts[:html] || {} # setup default html options
-      @html[:id] ||= name.to_s.underscore << '_tabnav'
-      @html[:class] ||= @html[:id]
-    end
-     
-    # should the helper generate a css for this tabnav?
-    def generate_css?
-      @generate_css ? true : false
-    end
-   
-    # sort your tabs alphabetically
-    def sort!
-      @tabs.sort! { |x,y| x.name <=> y.name  }
-    end
-    
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/tabnav_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/tabnav_helper.rb
deleted file mode 100644
index 20cf718..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/tabnav_helper.rb
+++ /dev/null
@@ -1,131 +0,0 @@
-module Widgets
-  module TabnavHelper
-    protected
-
-    # main method
-
-    # show a tabnav defined by a partial
-    #
-    # eg: <% tabnav :main do %>
-    #      ...html...
-    #     <% end %>
-    #
-    # or <%= tabnav :main %>
-    #
-    # options
-    # ===
-    #   :partial: defaults to widgets/<name>_tabnav
-    def tabnav name, opts={}, &block
-      partial_template = opts[:partial] || "widgets/#{name}_tabnav"
-      html = capture { render :partial => partial_template }
-      if block_given?
-        options = {:id => @_tabnav.html[:id] + '_content', :class => @_tabnav.html[:class] + '_content'}
-        html << tag('div', options, true)
-        html << capture(&block)
-        html << '</div>'
-        concat html
-        nil # avoid duplication if called with <%= %>
-      else
-        return html
-      end
-    end
-
-    # tabnav building methods
-    # they are used inside the widgets/*_tabnav.rhtml partials
-    # (you can also call them in your views if you want)
-
-    # renders the tabnav
-    def render_tabnav(name, opts={}, &proc)
-      raise ArgumentError, "Missing name parameter in tabnav call" unless name
-      raise ArgumentError, "Missing block in tabnav call" unless block_given?
-      @_tabnav = Tabnav.new(name, opts)
-
-      instance_eval(&proc)
-      concat @_tabnav.render_css('tabnav') if @_tabnav.generate_css?
-      concat tag('div',@_tabnav.html ,true)
-      @_tabnav.sort! if opts[:sort] == true
-      render_tabnav_tabs
-      concat "</div>\n"
-      nil
-    end
-
-    def add_tab options = {}, &block
-      raise 'Cannot call add_tab outside of a render_tabnav block' unless @_tabnav
-      @_tabnav.tabs << Tab.new(options, &block)
-      nil
-    end
-
-    # inspects controller names
-    def controller_names
-      files = Dir.entries(File.join(RAILS_ROOT, 'app/controllers'))
-      controllers = files.select {|x| x.match '_controller.rb'}
-      return controllers.map {|x| x.sub '_controller.rb', ''}.sort
-    end
-
-    private
-
-    # renders the tabnav's tabs
-    def render_tabnav_tabs
-      return if @_tabnav.tabs.empty?
-
-      concat tag('ul', {} , true)
-
-      @_tabnav.tabs.each do |tab|
-        li_options = {}
-        li_options[:id] = "#{tab.html[:id]}_container" if tab.html[:id]
-
-        tab_html = tab.html.dup
-        tab_html[:class] ||= ''
-        if tab.disabled?
-          tab_html[:class] << ' disabled'
-        elsif tab.highlighted?(params)
-          tab_html[:class] << ' active'
-        end
-        li_options[:class] = tab_html[:class]
-
-        concat tag('li', li_options, true)
-        if tab.disabled? || (tab.link.empty? && tab.remote_link.nil?)
-          concat content_tag('span', tab.name, tab_html)
-        elsif !tab.link.empty?
-          concat link_to(tab.name, tab.link, tab_html)
-        elsif tab.remote_link
-          success = "document.getElementsByClassName('active', $('" + @_tabnav.html[:id]+ "')).each(function(item){item.removeClassName('active');});"
-          success += "$('#{tab.html[:id]}').addClassName('active');"
-          # success += "alert(this);"
-
-          remote_opts = {:update => @_tabnav.html[:id] + '_content',
-            # :success => success,
-            :method => :get,
-            :loading => loading_function + success,
-            :loaded => "$('#{@_tabnav.html[:id]}_content').setStyle({height: 'auto'});"
-          }
-          concat link_to_remote(tab.name, remote_opts.merge(tab.remote_link), tab_html)
-        else
-          raise "WHAT THE HELL?"
-        end
-        concat "</li>\n"
-      end
-      concat '</ul>'
-    end
-
-    # generate javascript function to use
-    # while loading remote tabs
-    # NB: EXPERIMENTAL
-    def loading_function
-      # show customized partial and adjust content height
-      # todo: find out why I need a 38px offset :-|
-      begin
-        inner_html = capture {render :partial => 'shared/tabnav_loading' }
-      rescue
-        inner_html = "Loading..."
-      end
-      return <<-JAVASCRIPT
-          var element = $('#{@_tabnav.html[:id]}_content');
-          var h = element.getHeight() - 38;
-          element.innerHTML='#{escape_javascript(inner_html)}';
-          element.setStyle({height: ''+h+'px'});
-          //element.morph('height:'+h+'px');
-      JAVASCRIPT
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/tooltip.css.erb b/vendor/plugins/rails-widgets/lib/widgets/tooltip.css.erb
deleted file mode 100644
index f5c6661..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/tooltip.css.erb
+++ /dev/null
@@ -1,13 +0,0 @@
-<style>
-.tooltip {
-  position: absolute;
-  background-image: url(/images/widgets/tooltip_arrow.gif); 
-  background-repeat: no-repeat; 
-}
-    
-.tooltip_content {
-  padding: 20px;
-  margin-top: 20px;
-  background-color: #fdf389;
-}
-</style>
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/lib/widgets/tooltip_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/tooltip_helper.rb
deleted file mode 100644
index f1c6f92..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/tooltip_helper.rb
+++ /dev/null
@@ -1,64 +0,0 @@
-module Widgets
-  module TooltipHelper
-    include CssTemplate
-    
-    def tooltip(name=nil, opts={}, &proc)
-      if name.kind_of?(Hash) # called like this: <%= tooltip :name => 'aaa', :partial => 'mytooltip' %>
-        opts = name
-        name = opts[:name]
-      end
-      
-      opts[:id] ||= rand(1000)
-      name ||= image_tag('widgets/tooltip_image.gif', :border => 0)
- 
-      result = ''
-      result << tooltip_css
-      result << tooltip_link(opts[:id],name)
-      result << javascript_tag(tooltip_link_function(opts[:id]))
-      result << render_tooltip(name, tooltip_content(opts,&proc), opts)
-      
-      if block_given?
-        concat result
-        return nil
-      else
-        return result
-      end
-    end
-    
-    def tooltip_css
-      unless @_tooltip_css_done
-        @_tooltip_css_done = true
-        return render_css('tooltip')
-      else
-        ''
-      end
-    end
-    
-    def tooltip_content(opts={}, &proc)
-     return render(:partial => opts[:partial]) if opts[:partial]
-     return capture(&proc)
-    end
-       
-    def tooltip_link(id, name)
-      link_to name, 'javascript:void(0)', :id => "tooltip_link_#{id}"
-    end
-    
-    def tooltip_link_function(id)
-      "$('tooltip_link_#{id}').observe('click', function(event){toggleTooltip(event, $('tooltip_#{id}'))});"
-    end
- 
-    def close_tooltip_link(id, message = 'close')
-      message ||= 'close' # if nil is passed I'll force it
-      link_to_function message, "$('tooltip_#{id}').hide()"
-    end
-    
-    def render_tooltip(name, content, opts)
-      html = tag('div', {:id => "tooltip_#{opts[:id]}", :class=>'tooltip', :style => 'display:none'}, true)
-      html << tag('div', {:id => "tooltip_content_#{opts[:id]}", :class=>'tooltip_content'},true)
-      html << content
-      html << '<small>' + close_tooltip_link(opts[:id], opts[:close_message]) + '</small>'     
-      html << '</div></div>' 
-      html
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/lib/widgets/utils_helper.rb b/vendor/plugins/rails-widgets/lib/widgets/utils_helper.rb
deleted file mode 100644
index bd2bc78..0000000
--- a/vendor/plugins/rails-widgets/lib/widgets/utils_helper.rb
+++ /dev/null
@@ -1,23 +0,0 @@
-module Widgets
-  module UtilsHelper
-    def nocr(string)
-      return string.gsub("\n", '')
-    end
-  
-    # converts blank spaces into no breaking spaces
-    # use it like <%=nbsp ...%>
-    def nbsp(string)
-      string.to_s.gsub " ", "&nbsp;"
-    end 
-  
-    # generates random text to fill up not-yet-implemented interfaces
-    def lorem(n=nil)
-      words = %w{Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.} 
-      if n 
-        while (n > words.size) do words = words + words; end 
-        words = words[0..n]    
-      end
-      return words.join(' ') 
-    end
-  end  
-end
diff --git a/vendor/plugins/rails-widgets/tasks/widgets_tasks.rake b/vendor/plugins/rails-widgets/tasks/widgets_tasks.rake
deleted file mode 100644
index bc20c51..0000000
--- a/vendor/plugins/rails-widgets/tasks/widgets_tasks.rake
+++ /dev/null
@@ -1,28 +0,0 @@
-def copy(file_name, from_dir, to_dir)
-  FileUtils.mkdir to_dir unless File.exist?(File.expand_path(to_dir))   
-  from = File.expand_path(File.join(from_dir,file_name))
-  to = File.expand_path(File.join(to_dir, file_name))
-  puts "  creating: #{to}"
-  FileUtils.cp from, to unless File.exist?(to)
-end
-
-def copy_image(file_name)
-  plugin_images = File.join(File.dirname(__FILE__), '..', 'images')
-  app_images = File.join(RAILS_ROOT, 'public/images/widgets')
-  copy file_name, plugin_images, app_images 
-end
-
-def copy_javascript(file_name)
-  plugin_javascripts = File.join(File.dirname(__FILE__), '..', 'javascripts')
-  app_javascripts = File.join(RAILS_ROOT, 'public/javascripts/widgets')
-  copy file_name, plugin_javascripts, app_javascripts 
-end
-
-desc "Copies the widgets assets (images and javascripts) to the public folder"
-namespace :widgets do
-  task :setup do
-    copy_image      'tooltip_arrow.gif'
-    copy_image      'tooltip_image.gif'
-    copy_javascript 'tooltip.js'
-  end
-end
diff --git a/vendor/plugins/rails-widgets/test/disableable_test.rb b/vendor/plugins/rails-widgets/test/disableable_test.rb
deleted file mode 100644
index 338dc85..0000000
--- a/vendor/plugins/rails-widgets/test/disableable_test.rb
+++ /dev/null
@@ -1,39 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class MyDisablingObject
-  include Widgets::Disableable
-end
-
-class DisableableTest < Test::Unit::TestCase
-  
-  EXPECTED_INSTANCE_METHODS = %w{disabled_condition disabled_condition= disabled? disabled_if}
-  
-  def setup    
-    @obj = MyDisablingObject.new
-  end
-     
-  def test_included_methods
-    EXPECTED_INSTANCE_METHODS.each do |method|
-      assert @obj.respond_to?(method), "A disableable object should respond to '#{method}'"
-    end
-  end
-  
-  def test_accessor
-    assert @obj.disabled_condition.kind_of?(Proc)
-  end
-  
-  def test_disabled_if
-    disabled_proc = proc { 1 == 1 }
-    @obj.disabled_condition = disabled_proc
-    assert @obj.disabled_condition.kind_of?(Proc)
-  end
-  
-  def test_disabled?
-    @obj.disabled_if proc { 1 == 1 }
-    assert @obj.disabled?, 'should be disabled'
-  end
-
-  def test_default_disabled?
-    assert !@obj.disabled?, 'should not be disabled'
-  end
-end
diff --git a/vendor/plugins/rails-widgets/test/highlightable_test.rb b/vendor/plugins/rails-widgets/test/highlightable_test.rb
deleted file mode 100644
index 037ba01..0000000
--- a/vendor/plugins/rails-widgets/test/highlightable_test.rb
+++ /dev/null
@@ -1,76 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class MyHighlightingObject
-  include Widgets::Highlightable
-end
-
-class HighlightableTest < Test::Unit::TestCase
-  
-  EXPECTED_INSTANCE_METHODS = %w{highlights highlights= highlighted? highlights_on}
-  
-  def setup    
-    @obj = MyHighlightingObject.new
-  end
-     
-  def test_included_methods
-    EXPECTED_INSTANCE_METHODS.each do |method|
-      assert @obj.respond_to?(method), "An Highlightable object should respond to '#{method}'"
-    end
-  end
-  
-  def test_accessor
-    assert_equal [], @obj.highlights, 'should return an empty array'
-  end
-  
-  def test_highlights_on
-    @obj.highlights=[ {:action => 'my_action'}, {:action => 'my_action2', :controller => 'my_controller'}]
-    assert @obj.highlights.kind_of?(Array)
-    assert_equal 2, @obj.highlights.size, '2 highlights were added so far'
-    
-    @obj.highlights.each {|hl| assert hl.kind_of?(Hash)}
-    
-    # sanity check
-    assert_equal 'my_action',@obj.highlights[0][:action] 
-  end
-  
-  def test_highlights_on_proc
-    @bonus_points = 0
-    @obj.highlights_on proc {@bonus_points > 5}
-    assert !@obj.highlighted?, 'should not highlight until @bonus_points is greater than 5'
-    
-    @bonus_points = 10
-    assert @obj.highlighted?, 'should highlight because @bonus_points is greater than 5'
-  end
-  
-  def test_highlight_on_string
-    @obj.highlights_on "http://www.seesaw.it"
-    
-  end
-    
-  def test_highlighted?
-    @obj.highlights_on :controller => 'pippo'
-    
-    #check that highlights on its own link
-    assert @obj.highlighted?(:controller => 'pippo'), 'should highlight'
-    assert @obj.highlighted?(:controller => 'pippo', :action => 'list'), 'should highlight'
-    assert !@obj.highlighted?(:controller => 'pluto', :action => 'list'), 'should NOT highlight'
-
-  end
-  
-  def test_more_highlighted?
-    # add some other highlighting rules
-    # and check again
-    @obj.highlights=[{:controller => 'pluto'}]
-    assert @obj.highlighted?(:controller => 'pluto'), 'should highlight'
-  
-    @obj.highlights << {:controller => 'granny', :action => 'oyster'}
-    assert @obj.highlighted?(:controller => 'granny', :action => 'oyster'), 'should highlight' 
-    assert !@obj.highlighted?(:controller => 'granny', :action => 'daddy'), 'should NOT highlight'   
-  end
-  
-  def test_highlighted_with_slash
-    @obj.highlights_on :controller => '/pippo'
-    assert @obj.highlighted?({:controller => 'pippo'})
-  end
-
-end
\ No newline at end of file
diff --git a/vendor/plugins/rails-widgets/test/navigation_helper_test.rb b/vendor/plugins/rails-widgets/test/navigation_helper_test.rb
deleted file mode 100644
index c3967af..0000000
--- a/vendor/plugins/rails-widgets/test/navigation_helper_test.rb
+++ /dev/null
@@ -1,43 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class NavigationHelperTest < ActionView::TestCase
-  attr_accessor :params
-  include Widgets::NavigationHelper
-  
-  def setup
-    @params = {}
-  end
-    
-  def test_presence_of_instance_methods
-    %w{navigation add_item}.each do |instance_method|
-      assert respond_to?(instance_method), "#{instance_method} is not defined after including the helper" 
-    end     
-  end    
-  
-  def test_empty_navigation
-    expected = <<-END
-      <div class="main_navigation" id="main_navigation"></div>
-    END
-    
-    render_navigation :main do; end # empty navigation
-    assert_equal expected.strip, output_buffer;
-  end
-  
-  def test_navigation_with_two_items
-    expected = <<-END
-      <div class="main_navigation" id="main_navigation"><ul>
-          <li><a href="http://www.seesaw.it">seesaw</a>&nbsp;|</li>
-          <li><a href="http://blog.seesaw.it">blog</a></li>
-        </ul>
-      </div>
-    END
-    
-    render_navigation do
-      add_item :name => 'seesaw', :link => 'http://www.seesaw.it'
-      add_item :name => 'blog', :link => 'http://blog.seesaw.it'
-    end
-    
-    assert_html expected, output_buffer;
-  end
-  
-end
diff --git a/vendor/plugins/rails-widgets/test/showhide_helper_test.rb b/vendor/plugins/rails-widgets/test/showhide_helper_test.rb
deleted file mode 100644
index bdd17b2..0000000
--- a/vendor/plugins/rails-widgets/test/showhide_helper_test.rb
+++ /dev/null
@@ -1,186 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-require 'test/unit'
-
-# tableless model
-class Post < ActiveRecord::Base
-  def create_or_update
-    errors.empty?
-  end
-    
-  def self.columns()
-    @columns ||= []
-  end
-      
-  def self.column(name, sql_type = nil, default = nil, null = true)
-    columns << ActiveRecord::ConnectionAdapters::Column.new(name.to_s, default, sql_type.to_s, null)
-  end
-end
-
-class Widgets::ShowhideHelperTest < ActionView::TestCase
-  attr_accessor :output_buffer
-  include Widgets::ShowhideHelper
-  
-  def setup
-    @params = {:html => {:id=>'custom_html_id', :class=>'custom_css_class'}, 
-      :name => 'custom_name',
-      :show_link_id => 'custom_show_link_id',
-      :link_name => 'custom_link_name',
-      :detail_box_id => 'custom_detail_box_id'}
-    @post = Post.new
-    @template = self
-    clear_buffer
-  end
-    
-  EXPECTED_INSTANCE_METHODS = %w{show_box_for detail_box_for hide_box_for}
-  
-  def test_presence_of_instance_methods
-    EXPECTED_INSTANCE_METHODS.each do |instance_method|
-      assert respond_to?(instance_method), "#{instance_method} is not defined after including the helper" 
-    end     
-  end    
-  
-  def test_show_box_for_with_defaults
-    expected = "<a class=\"details_show_link\" href=\"#\" id=\"show_details_for_new_post\" onclick=\"$(&quot;details_for_new_post&quot;).show();\n$(&quot;show_details_for_new_post&quot;).hide();; return false;\">show details</a>"
-    assert_equal expected, show_box_for(@post)
-  
-    @post[:id]=23
-    expected = "<a class=\"details_show_link\" href=\"#\" id=\"show_details_for_post_23\" onclick=\"$(&quot;details_for_post_23&quot;).show();\n$(&quot;show_details_for_post_23&quot;).hide();; return false;\">show details</a>"
-    assert_equal expected, show_box_for(@post)
-  end
-  
-  def test_show_box_for_with_name
-    expected = "<a class=\"happyness_show_link\" href=\"#\" id=\"show_happyness_for_new_post\" onclick=\"$(&quot;happyness_for_new_post&quot;).show();\n$(&quot;show_happyness_for_new_post&quot;).hide();; return false;\">show details</a>"  
-    assert_equal expected, show_box_for(@post, :name=>'happyness')
-  
-    @post[:id]=23
-    expected = "<a class=\"happyness_show_link\" href=\"#\" id=\"show_happyness_for_post_23\" onclick=\"$(&quot;happyness_for_post_23&quot;).show();\n$(&quot;show_happyness_for_post_23&quot;).hide();; return false;\">show details</a>"
-    assert_equal expected, show_box_for(@post, :name=>'happyness')
-  end
-  
-  def test_show_box_for_with_full_params
-    expected = "<a class=\"custom_css_class\" href=\"#\" id=\"custom_html_id\" onclick=\"$(&quot;custom_detail_box_id&quot;).show();\n$(&quot;custom_html_id&quot;).hide();; return false;\">custom_link_name</a>"
-    assert_equal expected, show_box_for(@post, @params.merge(:name=>'must_be_overrided'))
-  end
-  
-  def test_show_box_if_not_ar
-    expected = "<a class=\"details_show_link\" href=\"#\" id=\"show_details_for_my_wonderful-name\" onclick=\"$(&quot;details_for_my_wonderful-name&quot;).show();\n$(&quot;show_details_for_my_wonderful-name&quot;).hide();; return false;\">show details</a>"
-    assert_equal expected, show_box_for('my_wonderful-name')
-  end
-  
-  ## hide
-  
-  def test_hide_box_for_with_defaults
-    expected = "<a class=\"details_hide_link\" href=\"#\" id=\"hide_details_for_new_post\" onclick=\"$(&quot;details_for_new_post&quot;).hide();\n$(&quot;show_details_for_new_post&quot;).show();; return false;\">hide details</a>"
-    assert_equal expected, hide_box_for(@post)
-  
-    @post[:id]=54
-    expected = "<a class=\"details_hide_link\" href=\"#\" id=\"hide_details_for_post_54\" onclick=\"$(&quot;details_for_post_54&quot;).hide();\n$(&quot;show_details_for_post_54&quot;).show();; return false;\">hide details</a>"
-    assert_equal expected, hide_box_for(@post)
-  end
-  
-  def test_hide_box_for_with_name
-    expected = "<a class=\"fear_hide_link\" href=\"#\" id=\"hide_fear_for_new_post\" onclick=\"$(&quot;fear_for_new_post&quot;).hide();\n$(&quot;show_fear_for_new_post&quot;).show();; return false;\">hide details</a>"
-    assert_equal expected, hide_box_for(@post, :name=>'fear')
-  
-    @post[:id]=54
-    expected = "<a class=\"fear_hide_link\" href=\"#\" id=\"hide_fear_for_post_54\" onclick=\"$(&quot;fear_for_post_54&quot;).hide();\n$(&quot;show_fear_for_post_54&quot;).show();; return false;\">hide details</a>"
-    assert_equal expected, hide_box_for(@post, :name=>'fear')
-  end
-  
-  def test_hide_box_for_with_full_params
-    expected = "<a class=\"custom_css_class\" href=\"#\" id=\"custom_html_id\" onclick=\"$(&quot;custom_detail_box_id&quot;).hide();\n$(&quot;custom_show_link_id&quot;).show();; return false;\">custom_link_name</a>"
-    assert_equal expected, hide_box_for(@post, @params.merge(:name=>'must_be_overrided'))
-  end  
-  
-  def test_hide_box_if_non_ar
-    expected = "<a class=\"details_hide_link\" href=\"#\" id=\"hide_details_for_my_wonderful-name\" onclick=\"$(&quot;details_for_my_wonderful-name&quot;).hide();\n$(&quot;show_details_for_my_wonderful-name&quot;).show();; return false;\">hide details</a>"
-    assert_equal expected, hide_box_for('my_wonderful-name')
-  end
-  
-  ## detail
-  
-  def test_detail_box_should_raise_argument_error
-    assert_raise(ArgumentError) do
-      detail_box_for @post
-    end
-  end
-    
-  def test_detail_box_css_generation
-    expected = "<style>\n  .details_for_post {\n    background: #FFFABF;\n    border: solid 1px #cccccc;\n    padding: 10px;\n    margin-bottom: 5px;\n  }\n</style>\n"+
-      "<div class=\"details_for_post\" id=\"details_for_new_post\" style=\"display:none;\">nice Content</div>"
-    assert_nothing_raised do
-      detail_box_for @post, :generate_css=>true do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  end
-  
-  def test_detail_box_with_defaults
-    expected = "<div class=\"details_for_post\" id=\"details_for_new_post\" style=\"display:none;\">nice Content</div>"
-    assert_nothing_raised do
-      detail_box_for @post do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  
-    @post[:id]=87
-    expected = "<div class=\"details_for_post\" id=\"details_for_post_87\" style=\"display:none;\">nice Content</div>"
-    clear_buffer
-    
-    assert_nothing_raised do
-      detail_box_for @post do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  end
-  
-  def test_detail_box_with_name
-    expected = "<div class=\"master_for_post\" id=\"master_for_new_post\" style=\"display:none;\">nice Content</div>"
-    assert_nothing_raised do
-      detail_box_for @post, :name=>'master' do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  
-    @post[:id]=87
-    clear_buffer
-    expected = "<div class=\"master_for_post\" id=\"master_for_post_87\" style=\"display:none;\">nice Content</div>"
-    assert_nothing_raised do
-      detail_box_for @post, :name=>'master' do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  end
-  
-  def test_detail_box_with_full_params
-    expected = "<div class=\"custom_css_class\" id=\"custom_html_id\" style=\"display:none;\">nice Content</div>"
-    assert_nothing_raised do
-      detail_box_for @post, @params.merge(:name=>'must_be_overrided') do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  end
-  
-  def test_detail_box_if_not_ar
-    expected = "<div class=\"details_for_my_wonderful-name\" id=\"details_for_my_wonderful-name\" style=\"display:none;\">nice Content</div>"
-    assert_nothing_raised do
-      detail_box_for 'my_wonderful-name' do
-        output_buffer.concat 'nice Content'
-      end
-    end
-    assert_equal expected, output_buffer
-  end
-  
-  protected
-  
-  def clear_buffer
-    @output_buffer = ''
-  end
-    
-end
diff --git a/vendor/plugins/rails-widgets/test/spiffy_corners/simple.html b/vendor/plugins/rails-widgets/test/spiffy_corners/simple.html
deleted file mode 100644
index 40371ae..0000000
--- a/vendor/plugins/rails-widgets/test/spiffy_corners/simple.html
+++ /dev/null
@@ -1,54 +0,0 @@
-<style>
-.spiffy{display:block}
-.spiffy *{
-  display:block;
-  height:1px;
-  overflow:hidden;
-  font-size:.01em;
-  background:#C3D9FF}
-.spiffy1{
-  margin-left:3px;
-  margin-right:3px;
-  padding-left:1px;
-  padding-right:1px;
-  border-left:1px solid #e5eeff;
-  border-right:1px solid #e5eeff;
-  background:#d2e2ff}
-.spiffy2{
-  margin-left:1px;
-  margin-right:1px;
-  padding-right:1px;
-  padding-left:1px;
-  border-left:1px solid #f9fbff;
-  border-right:1px solid #f9fbff;
-  background:#cee0ff}
-.spiffy3{
-  margin-left:1px;
-  margin-right:1px;
-  border-left:1px solid #cee0ff;
-  border-right:1px solid #cee0ff;}
-.spiffy4{
-  border-left:1px solid #e5eeff;
-  border-right:1px solid #e5eeff}
-.spiffy5{
-  border-left:1px solid #d2e2ff;
-  border-right:1px solid #d2e2ff}
-.spiffyfg{
-  padding: 0 5px; 
-  background:#C3D9FF}
-</style>
-<div>
-  <b class="spiffy">
-  <b class="spiffy1"><b></b></b>
-  <b class="spiffy2"><b></b></b>
-  <b class="spiffy3"></b>
-  <b class="spiffy4"></b>
-  <b class="spiffy5"></b></b>
-  <div class="spiffyfg">Ciccio</div>
-  <b class="spiffy">
-  <b class="spiffy5"></b>
-  <b class="spiffy4"></b>
-  <b class="spiffy3"></b>
-  <b class="spiffy2"><b></b></b>
-  <b class="spiffy1"><b></b></b></b>
-</div>
diff --git a/vendor/plugins/rails-widgets/test/spiffy_corners/spiffy_corners_test.rb b/vendor/plugins/rails-widgets/test/spiffy_corners/spiffy_corners_test.rb
deleted file mode 100755
index cbd0f0c..0000000
--- a/vendor/plugins/rails-widgets/test/spiffy_corners/spiffy_corners_test.rb
+++ /dev/null
@@ -1,19 +0,0 @@
-#!/usr/bin/env ruby
-require File.dirname(__FILE__) + '/../test_helper'
-
-class SpiffyCornersHelperTest < ActionView::TestCase
-
-  attr_accessor :params
-  include Widgets::SpiffyCorners::SpiffyCornersHelper
-  
-  def setup
-    @params = {}
-  end
-    
-  def test_simple_with_css
-    expected = load_template('spiffy_corners/simple.html') 
-    
-    spiffy_corners(:generate_css => true) do concat("Ciccio"); end
-    assert_equal expected, output_buffer
-  end
-end
diff --git a/vendor/plugins/rails-widgets/test/tab_test.rb b/vendor/plugins/rails-widgets/test/tab_test.rb
deleted file mode 100644
index 7d9cb7d..0000000
--- a/vendor/plugins/rails-widgets/test/tab_test.rb
+++ /dev/null
@@ -1,93 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class TabTest < Test::Unit::TestCase
-  include Widgets
-  
-  EXPECTED_INSTANCE_METHODS = %w{highlights link name title html highlighted? highlights_on links_to named titled}
-  
-  def setup    
-    @myname = 'Paolo'
-    @mysurname = 'Dona'
-   
-    @tab = Tab.new :name => 'tab', :link => {:controller => 'pippo', :action => 'pluto'}
-    @simple_tab = Tab.new :name => 'simple_tab', :link => {:controller =>'pippo'}
-
-    @dyntab = Tab.new :name => @myname, 
-                      :link => {:controller => 'pippo', :action => @myname},
-                      :highlights => [{:controller => @mysurname}]
-    
-    @distab = Tab.new :name => 'disabled_tab', 
-                      :link => {:controller => 'pippo'}, 
-                      :disabled_if => proc { 1 == 1 }
-
-    @empty = Tab.new :name => 'empty'
-  end
-     
-  def test_initialize_with_hash
-    tab = Tab.new :name => 'sample'
-    assert tab
-    assert_equal 'sample', tab.name
-  end
-  
-  def test_initialize_with_block
-    tab = Tab.new do |t|
-      t.name = 'sample'
-    end
-    assert tab
-    assert_equal 'sample', tab.name
-  end
-  
-  def test_initialize_with_highlights_array
-    tab = Tab.new :name=>'test', :highlights => [{:action=>'list'}, {:action => 'index'}]
-    assert_kind_of Array, tab.highlights
-    assert_equal 2, tab.highlights.size
-    assert_kind_of Hash, tab.highlights[0]
-    assert_kind_of Hash, tab.highlights[1]
-  end
-  
-  def test_initialize_with_single_highlight
-    tab = Tab.new :name=>'test', :highlights => {:action=>'list'}
-    assert_kind_of Array, tab.highlights
-    assert_equal 1, tab.highlights.size
-    assert_kind_of Hash, tab.highlights[0]
-  end
-  
-    
-  def test_presence_of_instance_methods
-    EXPECTED_INSTANCE_METHODS.each do |instance_method|
-      assert @tab.respond_to?(instance_method), "#{instance_method} is not defined in #{@tab.inspect} (#{@tab.class})" 
-    end     
-  end
-  
-  def test_name_dynamic
-    assert_equal 'Paolo', @dyntab.name
-   
-    @dyntab.name= @mysurname 
-    assert_equal 'Dona', @dyntab.name
-  end
-  
-  def test_links_to
-    assert_equal({:controller => 'pippo', :action => 'pluto'}, @tab.link)
-    
-    @tab.link= {:controller => 'pluto'}
-    assert_equal({:controller => 'pluto'}, @tab.link)
-  end
-  
-  def test_links_to_dynamic
-    assert_equal({:controller => 'pippo', :action => 'Paolo'}, @dyntab.link)
-    
-    @dyntab.link= {:controller => @mysurname}  
-    assert_equal({:controller => 'Dona'}, @dyntab.link)
-  end
-  
-  def test_highlighted?
-    t = Tab.new :name => 'cats', :highlights => {:controller => 'cats'}
-    assert t.highlighted?({:controller => 'cats'})
-  end
-
-  def test_disabled?
-    assert @distab.disabled?
-    assert !@simple_tab.disabled?
-  end
-  
-end
diff --git a/vendor/plugins/rails-widgets/test/table_helper_test.rb b/vendor/plugins/rails-widgets/test/table_helper_test.rb
deleted file mode 100644
index c83a0cc..0000000
--- a/vendor/plugins/rails-widgets/test/table_helper_test.rb
+++ /dev/null
@@ -1,218 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class TableHelperTest < ActionView::TestCase
-  
-  include Widgets::TableHelper
-  
-  EXPECTED_INSTANCE_METHODS = %w{tableize}
-  
-  def test_presence_of_instance_methods
-    EXPECTED_INSTANCE_METHODS.each do |instance_method|
-      assert respond_to?(instance_method), "#{instance_method} is not defined in #{@controller.inspect}" 
-    end     
-  end  
-  
-  def test_should_raise_argument_error_when_no_block_supplied
-    assert_raise(ArgumentError, "Missing block in tableize call") do 
-      tableize [], :cols => 3
-    end
-  end
-  
-  def test_should_raise_argument_error_when_less_than_2_columns_specified
-    assert_raise(ArgumentError, "Tableize columns must be two or more") do 
-      tableize [], :cols => 1 do; end;
-    end
-  end
-  
-  def test_should_raise_argument_error_when_collection_not_supplied
-    assert_raise(ArgumentError, "Missing collection parameter in tableize call") do 
-      tableize nil, {} do; end;
-    end
-    
-    assert_raise(ArgumentError, "Missing collection parameter in tableize call") do 
-      tableize nil, {:collection => nil} do; end;
-    end
-  end
-  
-  def test_block_invariance
-    assert_nothing_raised do
-      tableize ['IS', 'Same!', 'Thing?'], :name => :the_name do |i|
-        output_buffer.concat i
-      end
-    end
-    expected = output_buffer
-    assert_nothing_raised do
-      tableize(['IS', 'Same!', 'Thing?'], :name => :the_name) { |i| output_buffer.concat i }
-    end
-    assert_dom_equal expected, output_buffer, 'Block vs Proc generation differs'
-  end   
-  
-  def test_empty_layout
-    tableize [], :cols => 2, :name => :empty_layout do |i|
-      output_buffer.concat 'nowhere'
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table.empty_layout_table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 1
-        assert_select 'tr td', :count => 0
-      end
-    end  
-  end
-  
-  def test_1_item_layout
-    tableize [1], :name => '1_item_layout' do |i|
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table.1_item_layout_table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 1
-        assert_select 'tr:first-of-type td', :count => 3 do
-          assert_select 'td:first-of-type', '1'
-          assert_select 'td.blank:nth-of-type(2)', '&nbsp;'
-          assert_select 'td.blank:last-of-type', '&nbsp;'
-        end
-      end
-    end  
-  end 
-  
-  def test_row_less_1_item_layout
-    tableize %w{1 2 3 4 5}, :cols => 6, :name => 'row_less_1_item_layout' do |i| 
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table.row_less_1_item_layout_table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 1
-        assert_select 'tr:first-of-type td', 6 do
-          assert_select 'td:first-of-type', '1'
-          assert_select 'td:nth-of-type(2)', '2'
-          assert_select 'td:nth-of-type(3)', '3'
-          assert_select 'td:nth-of-type(4)', '4'
-          assert_select 'td:nth-of-type(5)', '5'
-          assert_select 'td.blank:last-of-type', '&nbsp;'
-        end
-      end   
-    end
-  end  
-  
-  def test_full_row_layout
-    tableize %w{1 2 3 4 5}, :cols => 5, :name => :full_row_layout  do |i| 
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table.full_row_layout_table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 1
-        assert_select 'tr:first-of-type td', :count => 5 do
-          assert_select 'td:first-of-type', '1'
-          assert_select 'td:nth-of-type(2)', '2'
-          assert_select 'td:nth-of-type(3)', '3'
-          assert_select 'td:nth-of-type(4)', '4'
-          assert_select 'td:last-of-type', '5'
-        end
-      end
-    end
-  end  
-  
-  def test_row_plus_1_item_layout
-    tableize %w{1 2 3 4 5}, :cols => 4, :name=> 'row_plus_1_item_layout' do |i| 
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table.row_plus_1_item_layout_table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 2
-        assert_select 'tr:first-of-type td', :count => 4 do
-          assert_select 'td:first-of-type', '1'
-          assert_select 'td:nth-of-type(2)', '2'
-          assert_select 'td:nth-of-type(3)', '3'
-          assert_select 'td:last-of-type', '4'
-        end
-        assert_select 'tr:last-of-type td', :count => 4 do
-          assert_select 'td:first-of-type', '5'
-          assert_select 'td.blank:nth-of-type(2)', '&nbsp;'
-          assert_select 'td.blank:nth-of-type(3)', '&nbsp;'
-          assert_select 'td.blank:last-of-type', '&nbsp;'
-        end
-      end
-    end
-  end
-  
-  def test_row_with_header_title
-    tableize %w{1 2 3}, :cols => 4, :header => 'I am a title', :name=> 'row_with_header_title' do |i| 
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table.row_with_header_title_table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 1
-        assert_select 'th:first-child', 'I am a title'
-        assert_select 'th:only-of-type', 'I am a title'
-        
-        assert_select 'tr > td', 3
-        assert_select 'td:first-of-type', '1'
-        assert_select 'td:nth-of-type(2)', '2'
-        assert_select 'td:last-of-type', '3'
-      end
-    end
-  end
-  
-  def test_multiple_rows_skip_header_column
-    tableize %w{1 2 3 4 5}, :cols => 3, :skip_header_column => true do |i| 
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'table:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 2
-        assert_select 'tr:first-of-type td', :count => 3 do
-          assert_select 'td:first-of-type', '1'
-          assert_select 'td:nth-of-type(2)', '2'
-          assert_select 'td:last-of-type', '3'
-        end
-        assert_select 'tr:last-of-type td', :count => 3 do
-          assert_select 'td.blank:first-of-type', '&nbsp;'
-          assert_select 'td:nth-of-type(2)', '4'
-          assert_select 'td:last-of-type', '5'
-        end
-      end
-    end
-  end
-  
-  def test_options
-    tableize nil,
-             :name => :options, 
-             :collection => %w{1 2 3 4 5}, 
-             :generate_css => true,
-             :header => 'TiTlE',
-             :html => {:id => 'number', :class => 'demo'},
-             :cols => 4 do |i| 
-      output_buffer.concat i.to_s
-    end
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'style:root', :count => 1
-    assert_select root, 'table[class=demo][id=number]:root', :count => 1 do
-      assert_select 'tbody:only-of-type' do
-        assert_select 'tr', :count => 2
-        assert_select 'tr:first-of-type th, tr:first-of-type td', :count => 4 do
-          assert_select 'th:first-child', 'TiTlE'
-          assert_select 'th:only-of-type', 'TiTlE'
-          assert_select 'td:first-of-type', '1'
-          assert_select 'td:nth-child(2)', '1'
-          assert_select 'td:nth-of-type(2)', '2'
-          assert_select 'td:last-of-type', '3'
-          assert_select 'td:nth-child(4)', '3'
-        end
-        assert_select 'tr:last-of-type td', :count => 4 do
-          assert_select 'td:first-of-type', '4'
-          assert_select 'td:nth-of-type(2)', '5'
-          assert_select 'td.blank:nth-of-type(3)', '&nbsp;'
-          assert_select 'td.blank:last-of-type', '&nbsp;'
-        end
-      end
-    end
-  end  
-  
-end
diff --git a/vendor/plugins/rails-widgets/test/tabnav_helper_test.rb b/vendor/plugins/rails-widgets/test/tabnav_helper_test.rb
deleted file mode 100644
index 85afbea..0000000
--- a/vendor/plugins/rails-widgets/test/tabnav_helper_test.rb
+++ /dev/null
@@ -1,18 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class TabnavHelperTest < Test::Unit::TestCase
-    
-  EXPECTED_INSTANCE_METHODS = %w{tabnav render_tabnav add_tab}
-  
-  def setup
-    @view = ActionView::Base.new
-    @view.extend Widgets::TabnavHelper
-  end
-    
-  def test_presence_of_instance_methods
-    EXPECTED_INSTANCE_METHODS.each do |instance_method|
-      assert @view.respond_to?(instance_method), "#{instance_method} is not defined in #{@controller.inspect}" 
-    end     
-  end  
-  
-end
diff --git a/vendor/plugins/rails-widgets/test/tabnav_test.rb b/vendor/plugins/rails-widgets/test/tabnav_test.rb
deleted file mode 100644
index a4b4abe..0000000
--- a/vendor/plugins/rails-widgets/test/tabnav_test.rb
+++ /dev/null
@@ -1,51 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class TabnavTest < ActionView::TestCase
-
-  include Widgets::TabnavHelper
-  attr_accessor :params
-
-  def setup
-    @params = {}
-  end
-
-  def test_default_html_options
-    tabnav = Widgets::Tabnav.new :sample
-    assert_equal 'sample_tabnav', tabnav.html[:id]
-    assert_equal 'sample_tabnav', tabnav.html[:class]
-  end
-
-  def test_multiple_css_class
-    render_tabnav :main do
-      add_tab :html=>{:class=>'home'} do |t|
-        t.named 'active-tab'
-        t.links_to 'my/demo/link'
-        t.highlight!
-      end
-      add_tab :html=>{:class=>'custom'} do |t|
-        t.named 'second'
-      end
-      add_tab do |t|
-        t.named 'middle'
-      end
-      add_tab :html=>{:class=>'last'} do |t|
-        t.named 'disabled-tab'
-        t.disable!
-      end
-    end
-
-    root = HTML::Document.new(output_buffer).root
-    assert_select root, 'div[class=main_tabnav][id=main_tabnav]:root', :count => 1 do
-      assert_select 'ul:only-of-type li', :count => 4 do
-        assert_select 'li[class=home active]:first-of-type' do
-          assert_select 'a[class=home active]:only-of-type', 'active-tab'
-        end
-        assert_select 'li.custom:nth-of-type(2)', 'second'
-        assert_select 'li:nth-of-type(3)', 'middle'
-        assert_select 'li[class=last disabled]:last-of-type' do
-          assert_select 'span[class=last disabled]:only-of-type', 'disabled-tab'
-        end
-      end
-    end
-  end
-end
diff --git a/vendor/plugins/rails-widgets/test/test_helper.rb b/vendor/plugins/rails-widgets/test/test_helper.rb
deleted file mode 100644
index 64cc967..0000000
--- a/vendor/plugins/rails-widgets/test/test_helper.rb
+++ /dev/null
@@ -1,27 +0,0 @@
-$:.unshift(File.dirname(__FILE__) + '/..')
-$:.unshift(File.dirname(__FILE__) + '/../lib')
-
-require 'rubygems'
-require 'test/unit'
-require 'active_record'
-require 'action_controller'
-require 'action_controller/test_process'
-require 'action_view/test_case'
-require 'init'
-
-# gem install redgreen for colored test output
-begin require 'redgreen'; rescue LoadError; end
-
-def assert_html expected, actual
-  expected = clean_html(expected)
-  actual = clean_html(actual)
-  assert_equal expected, actual
-end  
-  
-def clean_html(html_string)
-  return html_string.strip.gsub(/[\n\r]/, '').gsub(/>\s+</, '><')
-end
-
-def load_template(name)
-  IO.read(File.join(File.dirname(__FILE__),name))
-end 
diff --git a/vendor/plugins/rails-widgets/test/tooltip_helper_test.rb b/vendor/plugins/rails-widgets/test/tooltip_helper_test.rb
deleted file mode 100644
index 50ecbe8..0000000
--- a/vendor/plugins/rails-widgets/test/tooltip_helper_test.rb
+++ /dev/null
@@ -1,33 +0,0 @@
-require File.dirname(__FILE__) + '/test_helper'
-
-class TooltipHelperTest < ActionView::TestCase
-  attr_accessor :params
-  include Widgets::TooltipHelper
-  
-  def setup
-    @params = {}
-  end
-    
-  def test_presence_of_instance_methods
-    %w{tooltip}.each do |instance_method|
-      assert respond_to?(instance_method), "#{instance_method} is not defined after including the helper" 
-    end     
-  end    
-  
-  def test_tooltip_link_function
-    expected = "$('tooltip_link_one').observe('click', function(event){toggleTooltip(event, $('tooltip_one'))});"   
-    assert_equal expected.strip, tooltip_link_function(:one);
-  
-    expected = "$('tooltip_link_two').observe('click', function(event){toggleTooltip(event, $('tooltip_two'))});"   
-    assert_equal expected.strip, tooltip_link_function(:two);
-  end
-  
-  def test_close_tooltip_link
-    expected = "<a href=\"#\" onclick=\"$('tooltip_first').hide(); return false;\">close</a>"   
-    assert_equal expected.strip, close_tooltip_link(:first);
-    
-    expected = "<a href=\"#\" onclick=\"$('tooltip_second').hide(); return false;\">chiudi</a>"   
-    assert_equal expected.strip, close_tooltip_link(:second, 'chiudi');
-  end
- 
-end
diff --git a/vendor/plugins/rails-widgets/uninstall.rb b/vendor/plugins/rails-widgets/uninstall.rb
deleted file mode 100644
index 9738333..0000000
--- a/vendor/plugins/rails-widgets/uninstall.rb
+++ /dev/null
@@ -1 +0,0 @@
-# Uninstall hook code here
